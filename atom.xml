<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonty Blog</title>
  
  <subtitle>记录搬砖生活</subtitle>
  <link href="https://jonty.top/atom.xml" rel="self"/>
  
  <link href="https://jonty.top/"/>
  <updated>2023-06-09T07:08:48.987Z</updated>
  <id>https://jonty.top/</id>
  
  <author>
    <name>JontyWang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis分布式锁以及ABP应用</title>
    <link href="https://jonty.top/2023/06/09/redis-distributed-locking/"/>
    <id>https://jonty.top/2023/06/09/redis-distributed-locking/</id>
    <published>2023-06-09T05:59:01.000Z</published>
    <updated>2023-06-09T07:08:48.987Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>分布式锁其实就是，控制分布式系统不同进程共同访问共享资源的一种锁的实现。如果不同的系统或同一个系统的不同主机之间共享了某个临界资源，往往需要互斥来防止彼此干扰，以保证一致性。</p></div><h2 id="分布式锁的特征"><a href="#分布式锁的特征" class="headerlink" title="分布式锁的特征"></a>分布式锁的特征</h2><p>一把靠谱的分布式锁应该有哪些特征：</p><p><img data-src="https://cdn.jonty.top/img/Distributed-Locking.png" alt="Distributed-Locking"></p><ul><li><strong>互斥性</strong>：任意时刻，只有一个客户端能持有锁</li><li><strong>锁超时释放</strong>：持有锁超时，可以释放，防止不必要的资源浪费，也可以防止死锁</li><li><strong>可重入性</strong>：一个线程如果获取了锁之后，可以再次对其请求加锁</li><li><strong>高性能和高可用</strong>：加锁和解锁需要开销尽可能低，同时也要保证高可用，避免分布式锁失效</li><li><strong>安全性</strong>：锁只能被持有的客户端删除，不能被其他客户端删除</li></ul><h2 id="ABP使用分布式锁"><a href="#ABP使用分布式锁" class="headerlink" title="ABP使用分布式锁"></a>ABP使用分布式锁</h2><blockquote><p>ABP当前的分布式锁实现基于<a href="https://github.com/madelson/DistributedLock">DistributedLock</a>库.</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abp add-package Volo.Abp.DistributedLocking</span><br></pre></td></tr></table></figure><h3 id="配置提供程序"><a href="#配置提供程序" class="headerlink" title="配置提供程序"></a>配置提供程序</h3><p><a href="https://github.com/madelson/DistributedLock">DistributedLock</a>库对<a href="https://github.com/madelson/DistributedLock/blob/master/docs/DistributedLock.Redis.md">Redis</a>和<a href="https://github.com/madelson/DistributedLock/blob/master/docs/DistributedLock.ZooKeeper.md">ZooKeeper</a>提供<a href="https://github.com/madelson/DistributedLock#implementations">多种实现</a>。</p><p>如果要Redis，需要将<a href="https://www.nuget.org/packages/DistributedLock.Redis">DistributedLock.Redis</a> NuGet包添加到项目中，然后在模块类中注册，如下:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Medallion.Threading;</span><br><span class="line"><span class="keyword">using</span> Medallion.Threading.Redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AbpDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">DependsOn(</span></span><br><span class="line"><span class="meta">            typeof(AbpDistributedLockingModule)</span></span><br><span class="line"><span class="meta">            //If you have the other dependencies, you should do here</span></span><br><span class="line"><span class="meta">    )</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyModule</span> : <span class="title">AbpModule</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> configuration = context.Services.GetConfiguration();</span><br><span class="line">        </span><br><span class="line">            context.Services.AddSingleton&lt;IDistributedLockProvider&gt;(sp =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> connection = ConnectionMultiplexer</span><br><span class="line">                    .Connect(configuration[<span class="string">&quot;Redis:Configuration&quot;</span>]);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> </span><br><span class="line">                    RedisDistributedSynchronizationProvider(connection.GetDatabase());</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置<code>appsettings.json</code>文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Redis&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;Configuration&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>有两种方法可以使用分布式锁API：ABP的<code>IAbpDistributedLock</code>抽象和<a href="https://github.com/madelson/DistributedLock">DistributedLock</a>库的API。</p><h4 id="使用IAbpDistributedLock服务"><a href="#使用IAbpDistributedLock服务" class="headerlink" title="使用IAbpDistributedLock服务"></a>使用IAbpDistributedLock服务</h4><p>示例：使用<code>IAbpDistributedLock.TryAcquireAsync</code>方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Volo.Abp.DistributedLocking; </span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AbpDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyService</span> : <span class="title">ITransientDependency</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> IAbpDistributedLock _distributedLock;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyService</span>(<span class="params">IAbpDistributedLock distributedLock</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _distributedLock = distributedLock;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MyMethodAsync</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="keyword">using</span> (<span class="keyword">var</span> handle = </span><br><span class="line">                         <span class="keyword">await</span> _distributedLock.TryAcquireAsync(<span class="string">&quot;MyLockName&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (handle != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// your code that access the shared resource</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>TryAcquireAsync</code>可能无法获取锁. 如果无法获取锁, 则返回<code>null</code>. 在这种情况下, 你不应该访问资源. 如果句柄不为<code>null</code>, 则表示你已获得锁, 并且可以安全地访问资源.</p><p><code>TryAcquireAsync</code>方法拥有以下参数:</p><ul><li><code>name</code> (<code>string</code>, 必须): 锁的唯一名称. 不同的锁命名用于访问不同的资源.</li><li><code>timeout</code> (<code>TimeSpan</code>): 等待获取锁的超时值. 默认值为<code>TimeSpan.Zero</code>, 这意味着如果锁已经被另一个应用程序拥有, 它不会等待.</li><li><code>cancellationToken</code>: 取消令牌可在触发后取消操作.</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="AbpDistributedLockOptions"><a href="#AbpDistributedLockOptions" class="headerlink" title="AbpDistributedLockOptions"></a>AbpDistributedLockOptions</h4><p><code>AbpDistributedLockOptions</code> 是配置分布式锁的主要选项类.</p><p>示例: 设置应用程序的分布式锁Key前缀</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpDistributedLockOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.KeyPrefix = <span class="string">&quot;MyApp1&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Redis实现分布式锁方案"><a href="#Redis实现分布式锁方案" class="headerlink" title="Redis实现分布式锁方案"></a>Redis实现分布式锁方案</h2><h3 id="方案1：SETNX-EXPIRE"><a href="#方案1：SETNX-EXPIRE" class="headerlink" title="方案1：SETNX + EXPIRE"></a>方案1：SETNX + EXPIRE</h3><p>使用<code>setnx</code>+ <code>expire</code>命令，即先用<code>setnx</code>来抢锁，如果抢到之后再用<code>expire</code>给锁设置一个过期时间，防止忘记释放</p><blockquote><p>SETNX 是SET IF NOT EXISTS的简写.日常命令格式是SETNX key value，如果 key不存在，则SETNX成功返回1，如果这个key已经存在了，则返回0。</p></blockquote><p>假设某电商网站的某商品做秒杀活动，key可以设置为key_resource_id,value设置任意值，伪代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（jedis.setnx(key_resource_id,lock_value) == <span class="number">1</span>）&#123; <span class="comment">//加锁</span></span><br><span class="line">    expire（key_resource_id，<span class="number">100</span>）; <span class="comment">//设置过期时间</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> something  <span class="comment">//业务请求</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>()&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span> &#123;</span><br><span class="line">       jedis.del(key_resource_id); <span class="comment">//释放锁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个方案中，<code>setnx</code>和<code>expire</code>两个命令分开了，不是原子操作。如果执行完<code>setnx</code>加锁，正要执行<code>expire</code>设置过期时间时，进程crash或者要重启维护了，那么这个锁就“长生不老”了，别的线程永远获取不到锁。</p><h3 id="方案2：SETNX-Value值"><a href="#方案2：SETNX-Value值" class="headerlink" title="方案2：SETNX + Value值"></a>方案2：SETNX + Value值</h3><p>为了解决方案1：发生异常锁得不到释放的场景，可以把过期时间放到<code>setnx</code>的<code>value</code>值里面。如果加锁失败，再拿出value值校验一下即可。</p><p>加锁代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> expires = System.currentTimeMillis() + expireTime; <span class="comment">//系统时间+设置的过期时间</span></span><br><span class="line">String expiresStr = String.valueOf(expires);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果当前锁不存在，返回加锁成功</span></span><br><span class="line"><span class="keyword">if</span> (jedis.setnx(key_resource_id, expiresStr) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 如果锁已经存在，获取锁的过期时间</span></span><br><span class="line">String currentValueStr = jedis.get(key_resource_id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果获取到的过期时间，小于系统当前时间，表示已经过期</span></span><br><span class="line"><span class="keyword">if</span> (currentValueStr != <span class="keyword">null</span> &amp;&amp; Long.parseLong(currentValueStr) &lt; System.currentTimeMillis()) &#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 锁已过期，获取上一个锁的过期时间，并设置现在锁的过期时间（不了解redis的getSet命令的小伙伴，可以去官网看下哈）</span></span><br><span class="line">    String oldValueStr = jedis.getSet(key_resource_id, expiresStr);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (oldValueStr != <span class="keyword">null</span> &amp;&amp; oldValueStr.equals(currentValueStr)) &#123;</span><br><span class="line">         <span class="comment">// 考虑多线程并发的情况，只有一个线程的设置值和当前值相同，它才可以加锁</span></span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//其他情况，均返回加锁失败</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>这个方案的优点是，巧妙移除<code>expire</code>单独设置过期时间的操作，把过期时间放到<code>setnx</code>的<code>value</code>值里面来。解决了方案一发生异常，锁得不到释放的问题。</p><p>但是这个方案还有别的缺点：</p><ul><li>过期时间是客户端自己生成的（<code>System.currentTimeMillis()</code>是当前系统的时间），必须要求分布式环境下，每个客户端的时间必须同步。</li><li>如果锁过期的时候，并发多个客户端同时请求过来，都执行<code>jedis.getSet()</code>，最终只能有一个客户端加锁成功，但是该客户端锁的过期时间，可能被别的客户端覆盖</li><li>该锁没有保存持有者的唯一标识，可能被别的客户端释放/解锁。</li></ul><h3 id="方案3：使用Lua脚本"><a href="#方案3：使用Lua脚本" class="headerlink" title="方案3：使用Lua脚本"></a>方案3：使用Lua脚本</h3><p>可以使用Lua脚本来保证原子性（包含<code>setnx</code>和<code>expire</code>两条指令），<code>lua</code>脚本如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> redis.call(<span class="string">&#x27;setnx&#x27;</span>,KEYS[<span class="number">1</span>],ARGV[<span class="number">1</span>]) == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">   redis.call(<span class="string">&#x27;expire&#x27;</span>,KEYS[<span class="number">1</span>],ARGV[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>加锁代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String lua_scripts = <span class="string">&quot;if redis.call(&#x27;setnx&#x27;,KEYS[1],ARGV[1]) == 1 then&quot;</span> +</span><br><span class="line">            <span class="string">&quot; redis.call(&#x27;expire&#x27;,KEYS[1],ARGV[2]) return 1 else return 0 end&quot;</span>;   </span><br><span class="line">Object result = jedis.eval(lua_scripts, Collections.singletonList(key_resource_id), Collections.singletonList(values));</span><br><span class="line"><span class="comment">//判断是否成功</span></span><br><span class="line"><span class="keyword">return</span> result.equals(<span class="number">1L</span>);</span><br></pre></td></tr></table></figure><h3 id="方案4：SET的扩展命令"><a href="#方案4：SET的扩展命令" class="headerlink" title="方案4：SET的扩展命令"></a>方案4：SET的扩展命令</h3><p>除了使用Lua脚本保证<code>SETNX + EXPIRE</code>两条指令的原子性，=还可以巧用Redis的SET指令扩展参数（<code>SET key value[EX seconds][PX milliseconds][NX|XX]</code>），也是原子性的。</p><blockquote><p>SET key value[ EX seconds ][PX milliseconds][NX|XX]</p><ul><li>NX :表示key不存在的时候，才能set成功，也即保证只有第一个客户端请求才能获得锁，而其他客户端请求只能等其释放锁，才能获取。</li><li>EX seconds :设定key的过期时间，时间单位是秒。</li><li>PX milliseconds: 设定key的过期时间，单位为毫秒</li><li>XX: 仅当key存在时设置值</li></ul></blockquote><p>伪代码示例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（jedis.set(key_resource_id, lock_value, <span class="string">&quot;NX&quot;</span>, <span class="string">&quot;EX&quot;</span>, 100s) == <span class="number">1</span>）&#123; <span class="comment">//加锁</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> something  <span class="comment">//业务处理</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>()&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span> &#123;</span><br><span class="line">       jedis.del(key_resource_id); <span class="comment">//释放锁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方案还是可能存在问题：</p><ul><li>问题一：<strong>锁过期释放了，业务还没执行完</strong>，假设线程a获取锁成功，一直在执行临界区的代码。但是100s过去后，它还没执行完。但是这时候锁已经过期了，此时线程b又请求过来。显然线程b就可以获得锁成功，也开始执行临界区的代码。那么问题就来了，临界区的业务代码都不是严格串行执行。</li><li>问题二：<strong>锁被别的线程误删</strong>，假设线程a执行完后，去释放锁。但是它不知道当前的锁可能是线程b持有的（线程a去释放锁时，有可能过期时间已经到了，此时线程b进来占有了锁）。那线程a就把线程b的锁释放掉了，但是线程b临界区业务代码可能都还没执行完。</li></ul><h3 id="方案5：方案4-唯一随机值"><a href="#方案5：方案4-唯一随机值" class="headerlink" title="方案5：方案4+唯一随机值"></a>方案5：方案4+唯一随机值</h3><p>既然锁可能被别的线程误删，给value值设置一个标记当前线程唯一的随机数，在删除的时候，校验一下。</p><p>伪代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（jedis.set(key_resource_id, uni_request_id, <span class="string">&quot;NX&quot;</span>, <span class="string">&quot;EX&quot;</span>, 100s) == <span class="number">1</span>）&#123; <span class="comment">//加锁</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> something  <span class="comment">//业务处理</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>()&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span> &#123;</span><br><span class="line">       <span class="comment">//判断是不是当前线程加的锁,是才释放</span></span><br><span class="line">       <span class="keyword">if</span> (uni_request_id.equals(jedis.get(key_resource_id))) &#123;</span><br><span class="line">        jedis.del(lockKey); <span class="comment">//释放锁</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，判断是不是当前线程加的锁和释放锁不是一个原子操作。如果调用<code>jedis.del()</code>释放锁的时候，可能这把锁已经不属于当前客户端，会解除他人加的锁。</p><p>为了更严谨，一般也是用<code>lua</code>脚本代替:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> redis.call(<span class="string">&#x27;get&#x27;</span>,KEYS[<span class="number">1</span>]) == ARGV[<span class="number">1</span>] <span class="keyword">then</span> </span><br><span class="line">   <span class="keyword">return</span> redis.call(<span class="string">&#x27;del&#x27;</span>,KEYS[<span class="number">1</span>]) </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="方案6：Redisson框架"><a href="#方案6：Redisson框架" class="headerlink" title="方案6：Redisson框架"></a>方案6：Redisson框架</h3><p>方案5还是可能存在<strong>锁过期释放，业务没执行完</strong>的问题。设想一下，是否可以给获得锁的线程，开启一个定时守护线程，每隔一段时间检查锁是否还存在，存在则对锁的过期时间延长，防止锁过期提前释放。</p><p>当前开源框架<strong>Redisson</strong>解决了这个问题。</p><p><img data-src="https://cdn.jonty.top/img/redisson.png" alt="redisson"></p><p>只要线程一加锁成功，就会启动一个<code>watch dog</code>看门狗，它是一个后台线程，会每隔10秒检查一下，如果线程1还持有锁，那么就会不断的延长锁key的生存时间。因此，<code>Redisson</code>就解决了<strong>锁过期释放，业务没执行完</strong>问题。</p><h3 id="方案7：集群分布式锁Redlock-Redisson"><a href="#方案7：集群分布式锁Redlock-Redisson" class="headerlink" title="方案7：集群分布式锁Redlock+Redisson"></a>方案7：集群分布式锁Redlock+Redisson</h3><p>Redis一般都是集群部署</p><p><img data-src="https://cdn.jonty.top/img/redis-cluster-redisson.png" alt="redis-cluster-redisson"></p><p>如果线程一在Redis的master节点上拿到了锁，但是加锁的key还没同步到slave节点。恰好这时，master节点发生故障，一个slave节点就会升级为master节点。线程二就可以获取同个key的锁啦，但线程一也已经拿到锁了，锁的安全性就没了。</p><p>为了解决这个问题，Redis作者 antirez提出一种高级的分布式锁算法：<code>Redlock</code>：</p><blockquote><p>搞多个Redis master部署，以保证它们不会同时宕掉。并且这些master节点是完全相互独立的，相互之间不存在数据同步。同时，需要确保在这多个master实例上，是与在Redis单实例，使用相同方法来获取和释放锁。</p></blockquote><p>假设当前有5个Redis master节点，在5台服务器上面运行这些Redis实例。</p><p><img data-src="https://cdn.jonty.top/img/redis-cluster.png" alt="redis-cluster"></p><p><code>RedLock</code>的实现步骤:</p><ul><li>获取当前时间，以毫秒为单位。</li><li>按顺序向5个master节点请求加锁。客户端设置网络连接和响应超时时间，并且超时时间要小于锁的失效时间。（假设锁自动失效时间为10秒，则超时时间一般在5-50毫秒之间）。如果超时，跳过该master节点，尽快去尝试下一个master节点。</li><li>客户端使用当前时间减去开始获取锁时间（即步骤1记录的时间），得到获取锁使用的时间。当且仅当超过一半（N/2+1，这里是5/2+1=3个节点）的Redis master节点都获得锁，并且使用的时间小于锁失效时间时，锁才算获取成功。（如上图，10s&gt; 30ms+40ms+50ms+4m0s+50ms）</li><li>如果取到了锁，key的真正有效时间就变，需要减去获取锁所使用的时间。</li><li>如果获取锁失败（没有在至少N/2+1个master实例取到锁，有或者获取锁时间已经超过了有效时间），客户端要在所有的master节点上解锁（即便有些master节点根本就没有加锁成功，也需要解锁，以防止有些漏网之鱼）。</li></ul><p>简化下步骤就是：</p><ul><li>按顺序向5个master节点请求加锁。</li><li>根据设置的超时时间来判断，是不是要跳过该master节点。</li><li>如果大于等于3个节点加锁成功，并且使用的时间小于锁的有效期，即可认定加锁成功啦。</li><li>如果获取锁失败，解锁。</li></ul><blockquote><p><a href="https://redis.io/docs/manual/patterns/distributed-locks/">Distributed Locks with Redis | Redis</a></p></blockquote>]]></content>
    
    
    <summary type="html">Redis实现分布式锁以及在ABP应用</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Redis" scheme="https://jonty.top/tags/Redis/"/>
    
    <category term="ABP" scheme="https://jonty.top/tags/ABP/"/>
    
    <category term="分布式锁" scheme="https://jonty.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>给博客装个空调</title>
    <link href="https://jonty.top/2023/06/01/air-conditioner/"/>
    <id>https://jonty.top/2023/06/01/air-conditioner/</id>
    <published>2023-06-01T05:51:11.000Z</published>
    <updated>2023-06-09T07:11:35.365Z</updated>
    
    <content type="html"><![CDATA[<iframe height="840" width="100%" src="https://ac.yunyoujun.cn"></iframe>]]></content>
    
    
    <summary type="html">唯一的缺憾是，没有风。</summary>
    
    
    
    <category term="人生是一场未知的旅行" scheme="https://jonty.top/categories/%E4%BA%BA%E7%94%9F%E6%98%AF%E4%B8%80%E5%9C%BA%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%97%85%E8%A1%8C/"/>
    
    
    <category term="Share" scheme="https://jonty.top/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>【游记】河南宝泉崖天下</title>
    <link href="https://jonty.top/2023/05/15/travelogue-henan-baoquan/"/>
    <id>https://jonty.top/2023/05/15/travelogue-henan-baoquan/</id>
    <published>2023-05-15T07:20:25.000Z</published>
    <updated>2023-05-15T09:53:57.156Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>太行八百里，最美在薄壁</p></div><img data-src="https://cdn.jonty.top/img/image-20230515153548260.png" alt="宝上路拍摄" style="width:600px" /><p>仍在出差，恰逢周末想着出去逛逛，既然来了河南，那就见见河南的风土人情~</p><p>很早是看短视频发现了这个地方，<code>宝泉崖天下</code>也是今年4月份刚开业的景点，实际上是分为两个部分：大峡谷景区和崖天下景区</p><p>大峡谷景区：大巴+门票大概是100￥</p><p>崖天下景区：门票+索道 160￥</p><p>大峡谷偏向于风景、绿水青山，而崖天下侧重于刺激的体验，比如空中玻璃栈道、悬崖过山车等（而且每个项目还需要单独收费）</p><p>花100大洋进大峡谷逛逛，至于崖天下，详见下文🤪</p><h2 id="宝泉大峡谷"><a href="#宝泉大峡谷" class="headerlink" title="宝泉大峡谷"></a>宝泉大峡谷</h2><p>乘坐大巴大概20分钟到达景区入口，开始一路逛逛逛，最终的目标是峡谷的尽头：飞龙瀑</p><img data-src="https://cdn.jonty.top/img/image-20230515163410673.png" alt="景交车进山" style="width:400px" /><p>途径的乱石滩</p><img data-src="https://cdn.jonty.top/img/image-20230515163944981.png" alt="乱石滩" style="width:400px" /><p>第一道瀑布，还以为到了终点，看路牌到核心景区还有2.5公里</p><img data-src="https://cdn.jonty.top/img/image-20230515164040802.png" alt="飞女瀑" style="width:400px" /><p>干脆飞个无人机探探路，一不小心游玩了全程~由于实在是太饿了（还特别热），乘坐景交车（15￥到景区入口）+大巴返回游客中心</p><p>下图便是大峡谷的终点站：飞龙瀑</p><img data-src="https://cdn.jonty.top/img/image-20230515164658578.png" alt="飞龙瀑" style="width:400px" /><h2 id="网红打卡点"><a href="#网红打卡点" class="headerlink" title="网红打卡点"></a>网红打卡点</h2><p>简单吃点东西，返回游客中心后驾车上山，导航宝上路大概到双泉凹</p><p>下图是导航信息，不得不说，开山路很刺激，特别多回头弯</p><img data-src="https://cdn.jonty.top/img/image-20230515165847700.png" alt="宝上路，86上山了" style="zoom:33%;" /><p>也过隧道后第一道桥，往下大概200m可以看到有几家商店，然后穿过小溪，顺着小路可以一直开到崖边（建议越野车），步行前往大概15min，山顶有小旗子，进入树林后，小路后分成两条路，一条去小庙，向下的一条到观景台</p><p>以下多图预警！！！风景绝美</p><img data-src="https://cdn.jonty.top/img/image-20230515171011523.png" alt="俯瞰全景" style="width:400px" /><p>下图便是打卡点位置，沿着小路可以直达悬崖边，也就是突出的崖顶那~</p><img data-src="https://cdn.jonty.top/img/image-20230515171351991.png" alt="打卡点" style="width:400px" /><img data-src="https://cdn.jonty.top/img/image-20230515171120710.png" alt="打卡点航拍图" style="width:400px" /><p>对比外面的平原地区</p><img data-src="https://cdn.jonty.top/img/image-20230515171500338.png" alt="山脉外的平原" style="width:400px" /><img data-src="https://cdn.jonty.top/img/89e79d1bdfb8062920093312248180d.jpg" alt="俯拍" style="width:400px" /><img data-src="https://cdn.jonty.top/img/image-20230515172210737.png" alt="远眺" style="width:400px" /><p>最后扔一张打卡照，腿软……</p><img data-src="https://cdn.jonty.top/img/image-20230515172643641.png" alt="打卡照" style="width:400px" /><p>打卡完成，下山返程，下山的路边有特别多桃李园，可以尝尝</p><img data-src="https://cdn.jonty.top/img/image-20230515173820585.png" alt="高山与平原" style="width:400px;" /><img data-src="https://cdn.jonty.top/img/image-20230515173832900.png" alt="绝美太行山" style="width:400px"  /><img data-src="https://cdn.jonty.top/img/image-20230515173917653.png" alt="达尔文效应" style="width:400px" /><p>对了，下山后薄壁供销社加油站旁烧烤店的大盘鸡很不错~</p>]]></content>
    
    
    <summary type="html">太行山把最美的一段留给了河南</summary>
    
    
    
    <category term="人生是一场未知的旅行" scheme="https://jonty.top/categories/%E4%BA%BA%E7%94%9F%E6%98%AF%E4%B8%80%E5%9C%BA%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%97%85%E8%A1%8C/"/>
    
    
    <category term="Travelogue" scheme="https://jonty.top/tags/Travelogue/"/>
    
  </entry>
  
  <entry>
    <title>左耳听风</title>
    <link href="https://jonty.top/2023/05/15/coolshell/"/>
    <id>https://jonty.top/2023/05/15/coolshell/</id>
    <published>2023-05-15T07:11:33.000Z</published>
    <updated>2023-05-15T07:18:01.543Z</updated>
    
    <content type="html"><![CDATA[<p>以陈皓老师的座右铭纪念他</p><blockquote><p>芝兰生于深谷，不以无人而不芳<br>君子修身养德，不以穷困而改志</p></blockquote><p><a href="https://coolshell.cn/haoel">关于陈皓 | 酷 壳 - CoolShell</a></p>]]></content>
    
    
    <summary type="html">身体健康才是最大的财富</summary>
    
    
    
    <category term="人生是一场未知的旅行" scheme="https://jonty.top/categories/%E4%BA%BA%E7%94%9F%E6%98%AF%E4%B8%80%E5%9C%BA%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%97%85%E8%A1%8C/"/>
    
    
    <category term="Share" scheme="https://jonty.top/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Docker部署Keepalived</title>
    <link href="https://jonty.top/2023/05/11/docker-keepalived-vip-ip/"/>
    <id>https://jonty.top/2023/05/11/docker-keepalived-vip-ip/</id>
    <published>2023-05-11T03:22:13.000Z</published>
    <updated>2023-05-11T06:51:54.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>keepalived是集群管理中保证集群高可用的一个服务软件，其功能类似于heartbeat，用来防止单点故障。</p><p>但是它一般不会单独出现，而是与其它负载均衡技术（如lvs、haproxy、nginx）一起工作来达到集群的高可用。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://github.com/acassen/keepalived">https://github.com/acassen/keepalived</a> （源码）</li><li><a href="https://keepalived.readthedocs.io/en/latest/">https://keepalived.readthedocs.io/en/latest/</a> （官方）</li><li><a href="https://www.cnblogs.com/centos2017/p/7896780.html">https://www.cnblogs.com/centos2017/p/7896780.html</a></li><li><a href="https://www.cnblogs.com/getbird/p/11703027.html">https://www.cnblogs.com/getbird/p/11703027.html</a></li></ul><h2 id="功能示例"><a href="#功能示例" class="headerlink" title="功能示例"></a>功能示例</h2><h3 id="实现虚拟IP（IP漂移）"><a href="#实现虚拟IP（IP漂移）" class="headerlink" title="实现虚拟IP（IP漂移）"></a>实现虚拟IP（IP漂移）</h3><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><p><a href="https://github.com/osixia/docker-keepalived">https://github.com/osixia/docker-keepalived</a></p></li><li><p><a href="https://www.jianshu.com/p/c206d5a99274">https://www.jianshu.com/p/c206d5a99274</a></p></li><li><p><a href="https://www.cnblogs.com/zwh0910/p/16518416.html">https://www.cnblogs.com/zwh0910/p/16518416.html</a></p></li></ul><h4 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h4><p>使用docker运行keepalived，实现主备切换虚拟IP，实现宕机一台另一台IP自动变更，不影响原有使用，环境配置信息如下</p><h5 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h5><ul><li>虚拟IP: 192.168.2.153</li><li>主节点IP: 192.168.2.151</li><li>备节点IP: 192.168.2.152</li></ul><h5 id="网卡信息"><a href="#网卡信息" class="headerlink" title="网卡信息"></a>网卡信息</h5><ul><li>主节点： ens160</li><li>备节点： ens160</li></ul><h5 id="硬件配置与操作系统版本"><a href="#硬件配置与操作系统版本" class="headerlink" title="硬件配置与操作系统版本"></a>硬件配置与操作系统版本</h5><ul><li>2C+4G+40G</li><li>Ubuntu 18.04</li></ul><h4 id="本地配置路径"><a href="#本地配置路径" class="headerlink" title="本地配置路径"></a>本地配置路径</h4><blockquote><p>此路径根据实际进行调整</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /home/yh/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure><h4 id="配置内容"><a href="#配置内容" class="headerlink" title="配置内容"></a>配置内容</h4><h5 id="主配置"><a href="#主配置" class="headerlink" title="主配置"></a>主配置</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   #notification_email &#123;</span><br><span class="line">   #    root@localhost</span><br><span class="line">   #&#125;</span><br><span class="line">   #notification_email_from root@localhost</span><br><span class="line">   #smtp_server 127.0.0.1</span><br><span class="line">   #smtp_connect_timeout 30</span><br><span class="line">   router_id ka1 # 主从id区分</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">#vrrp_strict # 单播模式需要注释</span><br><span class="line">#vrrp_mcast_group4 224.100.100.100 # 单播模式需要注释</span><br><span class="line">   vrrp_iptables</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER  #设为主</span><br><span class="line">    interface ens160  #绑定的网卡名称，按需修改</span><br><span class="line">    virtual_router_id 11  #两台服务器保持一致</span><br><span class="line">    priority 100  # 主服务器优先级高一些</span><br><span class="line">    advert_int 1</span><br><span class="line">    #nopreempt  #注释，表示打开VIP漂移，在优先级高的服务器上线后自动漂移VIP</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 192.168.2.151  # 本机IP</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.2.152  #单播，通知的目标IP，可以写多个</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.2.153  #要保持和实际IP在同一网段，使用192.168.1.*，否则会因为缺少路由规则，两台服务器直接无法相互ping通</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="从配置"><a href="#从配置" class="headerlink" title="从配置"></a>从配置</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   #notification_email &#123;</span><br><span class="line">   #    root@localhost</span><br><span class="line">   #&#125;</span><br><span class="line">   #notification_email_from root@localhost</span><br><span class="line">   #smtp_server 127.0.0.1</span><br><span class="line">   #smtp_connect_timeout 30</span><br><span class="line">   router_id ka2 # 主从id区分</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   #vrrp_strict</span><br><span class="line">   #vrrp_mcast_group4 224.100.100.100</span><br><span class="line">   vrrp_iptables</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  # 设为备</span><br><span class="line">    interface ens160</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 80  #优先级低于主</span><br><span class="line">    advert_int 1</span><br><span class="line">    #nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 192.168.2.152  # 本机IP</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.2.151  #单播，通知的目标IP，可以写多个</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.2.153  #要保持和实际IP在同一网段，使用192.168.1.*，否则会因为缺少路由规则，两台服务器直接无法相互ping通</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主备服务器均使用此命令启动</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 注意此处的keepalived.conf文件路径调整</span></span></span><br><span class="line">docker run -d --restart=always \</span><br><span class="line">--net=host \</span><br><span class="line">-v /root/keepalived/keepalived.conf:/container/service/keepalived/assets/keepalived.conf \</span><br><span class="line">--cap-add=NET_ADMIN \</span><br><span class="line">--cap-add=NET_BROADCAST \</span><br><span class="line">--cap-add=NET_RAW \</span><br><span class="line">--name keepalived \</span><br><span class="line">osixia/keepalived:2.0.20 --copy-service</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看日志</span></span><br><span class="line">sudo docker logs -f keepalived</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除keepalived服务</span></span><br><span class="line">sudo docker rm -f keepalived</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除网卡其他ip</span></span><br><span class="line">ip addr del 192.168.2.xx dev ens192</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用Docker部署Keepalived实现VIP IP</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Docker" scheme="https://jonty.top/tags/Docker/"/>
    
    <category term="Keepalived" scheme="https://jonty.top/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>Docker注册Gitlab Runner</title>
    <link href="https://jonty.top/2023/05/11/use-docker-register-gitlab-runner/"/>
    <id>https://jonty.top/2023/05/11/use-docker-register-gitlab-runner/</id>
    <published>2023-05-11T03:16:41.000Z</published>
    <updated>2023-05-11T03:18:17.514Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GitLabServer=&#x27;https://git.xxx.com/&#x27; # gitlab服务器地址</span><br><span class="line">GitLabToken=&#x27;xxxxx&#x27; # gitlab 仓库token</span><br><span class="line">GitLabRunnerNamePrefix=&#x27;xxxx&#x27; # gitlab runner 前缀</span><br><span class="line">GitLabRunnerTags=&#x27;xxx&#x27; # gitlab runner tags</span><br><span class="line">GitLabRunnerDesc=&#x27;xxx&#x27; # gitlab runner desc</span><br><span class="line">GitLabRunnerImg=&#x27;gitlab/gitlab-runner:v14.10.1&#x27; # gitlab runner img</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建配置数据卷"><a href="#创建配置数据卷" class="headerlink" title="创建配置数据卷"></a>创建配置数据卷</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create &quot;$GitLabRunnerNamePrefix-gitlab-runner-conf&quot;</span><br></pre></td></tr></table></figure><h3 id="创建runner"><a href="#创建runner" class="headerlink" title="创建runner"></a>创建runner</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --network host -d --restart always \</span><br><span class="line">-e TZ=Asia/Beijing \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-v &quot;$GitLabRunnerNamePrefix-gitlab-runner-conf&quot;:/etc/gitlab-runner \</span><br><span class="line">--name &quot;$GitLabRunnerNamePrefix-gitlab-runner&quot; $GitLabRunnerImg</span><br></pre></td></tr></table></figure><h3 id="注册runner"><a href="#注册runner" class="headerlink" title="注册runner"></a>注册runner</h3><blockquote><p><a href="https://docs.gitlab.com/runner/examples/gitlab.html">https://docs.gitlab.com/runner/examples/gitlab.html</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm \</span><br><span class="line">-v &quot;$GitLabRunnerNamePrefix-gitlab-runner-conf&quot;:/etc/gitlab-runner \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">--name &quot;$GitLabRunnerNamePrefix-gitlab-runner-register&quot; $GitLabRunnerImg register \</span><br><span class="line">--url &quot;$GitLabServer&quot; \</span><br><span class="line">--registration-token &quot;$GitLabToken&quot; \</span><br><span class="line">--description &quot;$GitLabRunnerDesc&quot; \</span><br><span class="line">--tag-list &quot;$GitLabRunnerTags&quot; \</span><br><span class="line">--non-interactive \</span><br><span class="line">--executor &quot;docker&quot; \</span><br><span class="line">--docker-image docker:23.0.2 \</span><br><span class="line">--docker-privileged=&quot;true&quot; \</span><br><span class="line">--docker-volumes &quot;/certs/client&quot; \</span><br><span class="line">--run-untagged=&quot;true&quot; \</span><br><span class="line">--locked=&quot;false&quot; \</span><br><span class="line">--access-level=&quot;not_protected&quot; \</span><br><span class="line">--docker-volumes /var/run/docker.sock:/var/run/docker.sock </span><br></pre></td></tr></table></figure><h3 id="删除runner"><a href="#删除runner" class="headerlink" title="删除runner"></a>删除runner</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stop &quot;$GitLabRunnerNamePrefix-gitlab-runner&quot;</span><br><span class="line">docker rm &quot;$GitLabRunnerNamePrefix-gitlab-runner&quot;</span><br><span class="line">docker volume rm &quot;$GitLabRunnerNamePrefix-gitlab-runner-conf&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用Docker注册Gitlab Runner</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Docker" scheme="https://jonty.top/tags/Docker/"/>
    
    <category term="Runner" scheme="https://jonty.top/tags/Runner/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab Runner 实现内网自动部署</title>
    <link href="https://jonty.top/2023/05/11/gitlab-runner-intranet-job/"/>
    <id>https://jonty.top/2023/05/11/gitlab-runner-intranet-job/</id>
    <published>2023-05-11T03:02:58.000Z</published>
    <updated>2023-05-11T03:13:29.764Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近出差支持项目上线，我们的部署流程是Gitlab CI打包<code>Docker</code>镜像上传到云镜像服务，现场部署由于内网无法访问公网，没办法直接使用脚本实现自动部署(Runner没办法连接~)。目前的情况是，客户提供了一台可访问外网的机器（不提供也可以使用本机），并且在同一个网段，也算是放开一个口子，可以基于这一台机器去实现不同操作，以下便是提供的一种解决思路，减少工作量。</p></div><h2 id="Ubuntu安装Gitlab-Runner"><a href="#Ubuntu安装Gitlab-Runner" class="headerlink" title="Ubuntu安装Gitlab Runner"></a>Ubuntu安装Gitlab Runner</h2><h3 id="添加Gitlab-Runner仓库"><a href="#添加Gitlab-Runner仓库" class="headerlink" title="添加Gitlab Runner仓库"></a>添加Gitlab Runner仓库</h3><p>首先，添加Gitlab Runner的官方仓库，运行一下命令添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230511103118473.png" alt="image-20230511103118473"></p><h3 id="安装Gitlab-Runner"><a href="#安装Gitlab-Runner" class="headerlink" title="安装Gitlab Runner"></a>安装Gitlab Runner</h3><p>使用<code>apt</code>包管理器安装<code>Gitlab Runner</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitlab-runner</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230511103303074.png" alt="image-20230511103303074"></p><h3 id="检查Gitlab-Runner状态"><a href="#检查Gitlab-Runner状态" class="headerlink" title="检查Gitlab Runner状态"></a>检查Gitlab Runner状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-runner status</span><br></pre></td></tr></table></figure><p>查看Runner运行状态</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@runner:/home/jonty<span class="params">#</span> sudo gitlab-runner status</span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=2966404 revision=436955cb version=15.11.0</span><br><span class="line">gitlab-runner: Service is running</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230511103329891.png" alt="image-20230511103329891"></p><p>成功在Ubuntu安装Gitlab Runner</p><h3 id="卸载Gitlab-Runner"><a href="#卸载Gitlab-Runner" class="headerlink" title="卸载Gitlab Runner"></a>卸载Gitlab Runner</h3><p>停止服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-runner stop</span><br></pre></td></tr></table></figure><p>卸载服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-runner uninstall</span><br></pre></td></tr></table></figure><h2 id="注册Gitlab-Runner"><a href="#注册Gitlab-Runner" class="headerlink" title="注册Gitlab Runner"></a>注册Gitlab Runner</h2><p>将Runner注册到Gitlab项目中</p><p>1、获取Gitlab项目注册令牌：</p><ul><li>仓库RUL地址</li><li>仓库注册令牌</li></ul><p><img data-src="https://cdn.jonty.top/img/image-20230511102811943.png" alt="image-20230511102811943"></p><p>2、 注册Gitlab Runner</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-runner register</span><br></pre></td></tr></table></figure><p>按照提示输入Gitlab 示例的URL、项目的注册令牌以及Runner描述信息、Tag</p><p>这里<code>executor</code>选择<code>shell</code></p><p><img data-src="https://cdn.jonty.top/img/image-20230511103545979.png" alt="image-20230511103545979"></p><p>3、激活Gitlab Runner</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-runner verify</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230511103918535.png" alt="image-20230511103918535"></p><p>在项目Runner中可以看到已经注册完成：</p><p><img data-src="https://cdn.jonty.top/img/image-20230511103934445.png" alt="image-20230511103934445"></p><p>4、Gitlab Runner后台运行</p><p>使用“&amp;”将在后台启动，即使关闭 SSH 会话，它仍然存在，只有在服务器重新启动或关闭时才会停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-runner run&amp;</span><br></pre></td></tr></table></figure><h2 id="定义Job"><a href="#定义Job" class="headerlink" title="定义Job"></a>定义Job</h2><p>在<code>.gitlab-ci.yml</code>中定义Job</p><p><code>script</code>执行<code>runner</code>宿主机<code>/bin/bash /images_194/deploy_194.sh</code>脚本，实现<code>曲线救国</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy_dev:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">dependencies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">build_host_dev</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">refs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dev-1.5</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">retry:</span></span><br><span class="line">    <span class="attr">max:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/bin/bash</span> <span class="string">/images_194/deploy_194.sh</span></span><br></pre></td></tr></table></figure><p>最后贴出连接局域网另一台机器部署的脚本:</p><ul><li>拉取公网镜像，重新打Tag，推送到内网<code>Registry</code></li><li>ssh连接到内网机器，执行部署脚本</li><li>完成部署</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">imgAppNames=(<span class="string">&#x27;server&#x27;</span> <span class="string">&#x27;vue&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">AppFile</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">  WMS_VERSION=dev</span><br><span class="line">  REGISTRY_URL=ccr.ccs.tencentyun.com/xxx</span><br><span class="line">  LocalRegistryUrl=192.168.2.89:8232</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$WMS_VERSION</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$REGISTRY_URL</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$LocalRegistryUrl</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;正在处理应用镜像&quot;</span></span><br><span class="line">  PullImage</span><br><span class="line">  TagImage</span><br><span class="line">  PushImage</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">PullImage</span></span>()&#123;</span><br><span class="line">  <span class="keyword">for</span> imgName <span class="keyword">in</span> <span class="variable">$&#123;imgAppNames[@]&#125;</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  targetImgName=<span class="string">&quot;<span class="variable">$REGISTRY_URL</span>/<span class="variable">$&#123;imgName&#125;</span>:<span class="variable">$WMS_VERSION</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;正在拉取: <span class="variable">$targetImgName</span>&quot;</span></span><br><span class="line">  docker pull <span class="variable">$targetImgName</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;拉取完成&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">TagImage</span></span>()&#123;</span><br><span class="line">  <span class="keyword">for</span> imgName <span class="keyword">in</span> <span class="variable">$&#123;imgAppNames[@]&#125;</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  targetImgName=<span class="string">&quot;<span class="variable">$REGISTRY_URL</span>/<span class="variable">$&#123;imgName&#125;</span>:<span class="variable">$WMS_VERSION</span>&quot;</span></span><br><span class="line">  localImgName=<span class="string">&quot;<span class="variable">$LocalRegistryUrl</span>/<span class="variable">$&#123;imgName&#125;</span>:<span class="variable">$WMS_VERSION</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;正在打标签: <span class="variable">$targetImgName</span>&quot;</span></span><br><span class="line">  docker tag <span class="variable">$targetImgName</span> <span class="variable">$localImgName</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;打标签完成&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">PushImage</span></span>()&#123;</span><br><span class="line">  <span class="keyword">for</span> imgName <span class="keyword">in</span> <span class="variable">$&#123;imgAppNames[@]&#125;</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  localImgName=<span class="string">&quot;<span class="variable">$LocalRegistryUrl</span>/<span class="variable">$&#123;imgName&#125;</span>:<span class="variable">$WMS_VERSION</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;正在推送: <span class="variable">$localImgName</span>&quot;</span></span><br><span class="line">  docker push <span class="variable">$localImgName</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;推送完成&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AppFile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置参数</span></span><br><span class="line">REMOTE_IP=<span class="string">&quot;192.168.2.194&quot;</span></span><br><span class="line">REMOTE_USER=<span class="string">&quot;wms&quot;</span></span><br><span class="line">REMOTE_PASS=<span class="string">&quot;wmstest@123&quot;</span></span><br><span class="line">ROOT_PASS=<span class="string">&quot;wmstest@123&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到远程服务器</span></span><br><span class="line">sshpass -p <span class="string">&quot;<span class="variable">$&#123;REMOTE_PASS&#125;</span>&quot;</span> ssh -o StrictHostKeyChecking=no -l <span class="string">&quot;<span class="variable">$&#123;REMOTE_USER&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;REMOTE_IP&#125;</span>&quot;</span> &lt;&lt;- <span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 切换到 root 用户</span></span><br><span class="line"><span class="string">echo &quot;$&#123;ROOT_PASS&#125;&quot; | sudo -S su</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 切换到指定目录</span></span><br><span class="line"><span class="string">cd /home/wms/wms_app/07_app</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;移除当前服务：test_app&quot;</span></span><br><span class="line"><span class="string">sudo docker stack rm test_app</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">sleep 20s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;启动服务中...&quot;</span></span><br><span class="line"><span class="string"># 执行 run.sh</span></span><br><span class="line"><span class="string">sudo /bin/bash ./run.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;服务启动完成...&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">sudo docker service ls -f name=test_app</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 退出 root 用户</span></span><br><span class="line"><span class="string">exit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 退出远程服务器</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Gitlab CI 曲线救国 实现内网自动部署</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Gitlab" scheme="https://jonty.top/tags/Gitlab/"/>
    
    <category term="Runner" scheme="https://jonty.top/tags/Runner/"/>
    
  </entry>
  
  <entry>
    <title>Git 的奇技淫巧</title>
    <link href="https://jonty.top/2023/05/04/git-tips/"/>
    <id>https://jonty.top/2023/05/04/git-tips/</id>
    <published>2023-05-04T07:59:04.000Z</published>
    <updated>2023-05-04T08:02:07.660Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Git 常用命令集合，Fork 自 <a href="https://github.com/git-tips/tips">tips</a> 项目</p><p>分享自：<a href="https://github.com/521xueweihan/git-tips">521xueweihan/git-tips: Git的奇技淫巧 (github.com)</a></p></blockquote><p>Git 是一个分布式版本管理工具，版本管理工具就是大家在写东西的时候都用过 <strong>回撤</strong>这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用回撤是找不回来的。而<strong>版本管理工具能记录每次的修改</strong>，只要提交到版本仓库，就可以找到之前任何时刻的状态（文本状态）。</p><p>下面的内容就是列举了常用的 Git 命令和一些小技巧，可以通过页面内查找的方式 <code>Ctrl/Command+f</code> 进行快速查找。</p><h2 id="开卷必读"><a href="#开卷必读" class="headerlink" title="开卷必读"></a>开卷必读</h2><p><em>如果之前未使用过 Git，可以学习 <a href="https://rogerdudler.github.io/git-guide/index.zh.html">Git 小白教程</a>入门</em></p><ol><li><strong>一定要先测试命令的效果后</strong>，再用于工作环境中，以防造成不能弥补的后果！<strong>到时候别拿着砍刀来找我</strong></li><li>所有的命令都在 <code>git version 2.7.4 (Apple Git-66)</code> 下测试通过</li><li>统一概念：<ul><li>工作区：改动（增删文件和内容）</li><li>暂存区：输入命令：<code>git add 改动的文件名</code>，此次改动就放到了 ‘暂存区’</li><li>本地仓库(简称：本地)：输入命令：<code>git commit 此次修改的描述</code>，此次改动就放到了本地仓库，每个 commit，我叫它为一个版本。</li><li>远程仓库(简称：远程)：输入命令：<code>git push 远程仓库</code>，此次改动就放到了远程仓库（GitHub 等)</li><li>commit-id：输出命令：<code>git log</code>，最上面那行 <code>commit xxxxxx</code>，后面的字符串就是 commit-id</li></ul></li><li>如果喜欢这个项目，欢迎 Star、提交 Pr、<a href="https://github.com/521xueweihan/git-tips/issues">反馈问题</a>😊</li></ol><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#%E8%84%91%E5%9B%BE">脑图</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E5%B8%AE%E5%8A%A9%E4%BF%A1%E6%81%AF">展示帮助信息</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E7%8A%B6%E6%80%81">回到远程仓库的状态</a></li><li><a href="#%E9%87%8D%E8%AE%BE%E7%AC%AC%E4%B8%80%E4%B8%AA-commit">重设第一个commit</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E5%86%B2%E7%AA%81%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8">查看冲突文件列表</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E4%B8%8D%E5%90%8C">展示工作区和暂存区的不同</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8C%E6%9C%80%E8%BF%91%E7%89%88%E6%9C%AC%E7%9A%84%E4%B8%8D%E5%90%8C">展示暂存区和最近版本的不同</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9C%80%E8%BF%91%E7%89%88%E6%9C%AC%E7%9A%84%E4%B8%8D%E5%90%8C">展示暂存区、工作区和最近版本的不同</a></li><li><a href="#%E5%BF%AB%E9%80%9F%E5%88%87%E6%8D%A2%E5%88%B0%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF">快速切换到上一个分支</a></li><li><a href="#%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E5%90%88%E5%B9%B6%E5%88%B0-master-%E7%9A%84%E5%88%86%E6%94%AF">删除已经合并到 master 的分支</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E6%83%85%E5%86%B5">展示本地分支关联远程仓库的情况</a></li><li><a href="#%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF">关联远程分支</a></li><li><a href="#%E5%88%97%E5%87%BA%E6%89%80%E6%9C%89%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF">列出所有远程分支</a></li><li><a href="#%E5%88%97%E5%87%BA%E6%9C%AC%E5%9C%B0%E5%92%8C%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF">列出本地和远程分支</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB">查看远程分支和本地分支的对应关系</a></li><li><a href="#%E8%BF%9C%E7%A8%8B%E5%88%A0%E9%99%A4%E4%BA%86%E5%88%86%E6%94%AF%E6%9C%AC%E5%9C%B0%E4%B9%9F%E6%83%B3%E5%88%A0%E9%99%A4">远程删除了分支本地也想删除</a></li><li><a href="#%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%88%87%E6%8D%A2%E5%88%B0%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF">创建并切换到本地分支</a></li><li><a href="#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%88%87%E6%8D%A2%E5%88%B0%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF">从远程分支中创建并切换到本地分支</a></li><li><a href="#%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF">删除本地分支</a></li><li><a href="#%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF">删除远程分支</a></li><li><a href="#%E9%87%8D%E5%91%BD%E5%90%8D%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF">重命名本地分支</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E6%A0%87%E7%AD%BE">查看标签</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E6%A0%87%E7%AD%BE%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF">查看标签详细信息</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E5%88%9B%E5%BB%BA%E6%A0%87%E7%AD%BE">本地创建标签</a></li><li><a href="#%E6%8E%A8%E9%80%81%E6%A0%87%E7%AD%BE%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93">推送标签到远程仓库</a></li><li><a href="#%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E6%A0%87%E7%AD%BE">删除本地标签</a></li><li><a href="#%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E6%A0%87%E7%AD%BE">删除远程标签</a></li><li><a href="#%E5%88%87%E5%9B%9E%E5%88%B0%E6%9F%90%E4%B8%AA%E6%A0%87%E7%AD%BE">切回到某个标签</a></li><li><a href="#%E6%94%BE%E5%BC%83%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E4%BF%AE%E6%94%B9">放弃工作区的修改</a></li><li><a href="#%E6%81%A2%E5%A4%8D%E5%88%A0%E9%99%A4%E7%9A%84%E6%96%87%E4%BB%B6">恢复删除的文件</a></li><li><a href="#%E4%BB%A5%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AA-commit-%E7%9A%84%E6%96%B9%E5%BC%8F%E8%BF%98%E5%8E%9F%E6%9F%90%E4%B8%80%E4%B8%AA-commit-%E7%9A%84%E4%BF%AE%E6%94%B9">以新增一个 commit 的方式还原某一个 commit 的修改</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E6%9F%90%E4%B8%AA-commit-%E7%9A%84%E7%8A%B6%E6%80%81%E5%B9%B6%E5%88%A0%E9%99%A4%E5%90%8E%E9%9D%A2%E7%9A%84-commit">回到某个 commit 的状态，并删除后面的 commit</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E4%B8%8A%E4%B8%80%E4%B8%AA-commit-%E7%9A%84%E6%8F%8F%E8%BF%B0">修改上一个 commit 的描述</a></li><li><a href="#%E6%9F%A5%E7%9C%8B-commit-%E5%8E%86%E5%8F%B2">查看 commit 历史</a></li><li><a href="#%E6%98%BE%E7%A4%BA%E6%9C%AC%E5%9C%B0%E6%9B%B4%E6%96%B0%E8%BF%87-head-%E7%9A%84-git-%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95">显示本地更新过 HEAD 的 git 命令记录</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E4%BD%9C%E8%80%85%E5%90%8D">修改作者名</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84-url">修改远程仓库的 url</a></li><li><a href="#%E5%A2%9E%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93">增加远程仓库</a></li><li><a href="#%E5%88%97%E5%87%BA%E6%89%80%E6%9C%89%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93">列出所有远程仓库</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E4%B8%A4%E4%B8%AA%E6%98%9F%E6%9C%9F%E5%86%85%E7%9A%84%E6%94%B9%E5%8A%A8">查看两个星期内的改动</a></li><li><a href="#%E6%8A%8A-A-%E5%88%86%E6%94%AF%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA-commit%E6%94%BE%E5%88%B0-B-%E5%88%86%E6%94%AF%E4%B8%8A">把 A 分支的某一个 commit，放到 B 分支上</a></li><li><a href="#%E7%BB%99-git-%E5%91%BD%E4%BB%A4%E8%B5%B7%E5%88%AB%E5%90%8D">给 git 命令起别名</a></li><li><a href="#%E5%AD%98%E5%82%A8%E5%BD%93%E5%89%8D%E7%9A%84%E4%BF%AE%E6%94%B9%E4%BD%86%E4%B8%8D%E7%94%A8%E6%8F%90%E4%BA%A4-commit">存储当前的修改，但不用提交 commit</a></li><li><a href="#%E4%BF%9D%E5%AD%98%E5%BD%93%E5%89%8D%E7%8A%B6%E6%80%81%E5%8C%85%E6%8B%AC-untracked-%E7%9A%84%E6%96%87%E4%BB%B6">保存当前状态，包括 untracked 的文件</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89-stashes">展示所有 stashes</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E6%9F%90%E4%B8%AA-stash-%E7%9A%84%E7%8A%B6%E6%80%81">回到某个 stash 的状态</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA-stash-%E7%9A%84%E7%8A%B6%E6%80%81%E5%B9%B6%E5%88%A0%E9%99%A4%E8%BF%99%E4%B8%AA-stash">回到最后一个 stash 的状态，并删除这个 stash</a></li><li><a href="#%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84-stash">删除所有的 stash</a></li><li><a href="#%E4%BB%8E-stash-%E4%B8%AD%E6%8B%BF%E5%87%BA%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%AE%E6%94%B9">从 stash 中拿出某个文件的修改</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89-tracked-%E7%9A%84%E6%96%87%E4%BB%B6">展示所有 tracked 的文件</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89-untracked-%E7%9A%84%E6%96%87%E4%BB%B6">展示所有 untracked 的文件</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89%E5%BF%BD%E7%95%A5%E7%9A%84%E6%96%87%E4%BB%B6">展示所有忽略的文件</a></li><li><a href="#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4-untracked-%E7%9A%84%E6%96%87%E4%BB%B6">强制删除 untracked 的文件</a></li><li><a href="#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4-untracked-%E7%9A%84%E7%9B%AE%E5%BD%95">强制删除 untracked 的目录</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E7%AE%80%E5%8C%96%E7%9A%84-commit-%E5%8E%86%E5%8F%B2">展示简化的 commit 历史</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E6%9F%90%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%98%AF%E8%B0%81%E5%86%99%E7%9A%84">查看某段代码是谁写的</a></li><li><a href="#%E6%8A%8A%E6%9F%90%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF%E5%AF%BC%E5%87%BA%E6%88%90%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6">把某一个分支导出成一个文件</a></li><li><a href="#%E4%BB%8E%E5%8C%85%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%88%86%E6%94%AF">从包中导入分支</a></li><li><a href="#%E6%89%A7%E8%A1%8C-rebase-%E4%B9%8B%E5%89%8D%E8%87%AA%E5%8A%A8-stash">执行 rebase 之前自动 stash</a></li><li><a href="#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%A0%B9%E6%8D%AE-ID-%E6%8B%89%E4%B8%8B%E6%9F%90%E4%B8%80%E7%8A%B6%E6%80%81-%E5%88%B0%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF">从远程仓库根据 ID，拉下某一状态，到本地分支</a></li><li><a href="#%E8%AF%A6%E7%BB%86%E5%B1%95%E7%A4%BA%E4%B8%80%E8%A1%8C%E4%B8%AD%E7%9A%84%E4%BF%AE%E6%94%B9">详细展示一行中的修改</a></li><li><a href="#%E6%B8%85%E9%99%A4-gitignore-%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%87%E4%BB%B6">清除 <code>.gitignore</code> 文件中记录的文件</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89-alias-%E5%92%8C-configs">展示所有 alias 和 configs</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E5%BF%BD%E7%95%A5%E7%9A%84%E6%96%87%E4%BB%B6">展示忽略的文件</a></li><li><a href="#commit-%E5%8E%86%E5%8F%B2%E4%B8%AD%E6%98%BE%E7%A4%BA-Branch1-%E6%9C%89%E7%9A%84%E4%BD%86%E6%98%AF-Branch2-%E6%B2%A1%E6%9C%89-commit">commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit</a></li><li><a href="#%E5%9C%A8-commit-log-%E4%B8%AD%E6%98%BE%E7%A4%BA-GPG-%E7%AD%BE%E5%90%8D">在 commit log 中显示 GPG 签名</a></li><li><a href="#%E5%88%A0%E9%99%A4%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE">删除全局设置</a></li><li><a href="#%E6%96%B0%E5%BB%BA%E5%B9%B6%E5%88%87%E6%8D%A2%E5%88%B0%E6%96%B0%E5%88%86%E6%94%AF%E4%B8%8A%E5%90%8C%E6%97%B6%E8%BF%99%E4%B8%AA%E5%88%86%E6%94%AF%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95-commit">新建并切换到新分支上，同时这个分支没有任何 commit</a></li><li><a href="#%E5%B1%95%E7%A4%BA%E4%BB%BB%E6%84%8F%E5%88%86%E6%94%AF%E6%9F%90%E4%B8%80%E6%96%87%E4%BB%B6%E7%9A%84%E5%86%85%E5%AE%B9">展示任意分支某一文件的内容</a></li><li><a href="#clone-%E4%B8%8B%E6%9D%A5%E6%8C%87%E5%AE%9A%E7%9A%84%E5%8D%95%E4%B8%80%E5%88%86%E6%94%AF">clone 下来指定的单一分支</a></li><li><a href="#clone-%E6%9C%80%E6%96%B0%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4">clone 最新一次提交</a></li><li><a href="#%E5%BF%BD%E7%95%A5%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%94%B9%E5%8A%A8">忽略某个文件的改动</a></li><li><a href="#%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E7%9A%84%E6%9D%83%E9%99%90%E5%8F%98%E5%8C%96">忽略文件的权限变化</a></li><li><a href="#%E4%BB%A5%E6%9C%80%E5%90%8E%E6%8F%90%E4%BA%A4%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%88%97%E5%87%BA%E6%89%80%E6%9C%89-Git-%E5%88%86%E6%94%AF">以最后提交的顺序列出所有 Git 分支</a></li><li><a href="#%E5%9C%A8-commit-log-%E4%B8%AD%E6%9F%A5%E6%89%BE%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9">在 commit log 中查找相关内容</a></li><li><a href="#%E6%8A%8A%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E6%8C%87%E5%AE%9A-file-%E6%94%BE%E5%88%B0%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%AD">把暂存区的指定 file 放到工作区中</a></li><li><a href="#%E5%BC%BA%E5%88%B6%E6%8E%A8%E9%80%81">强制推送</a></li><li><a href="#git-%E9%85%8D%E7%BD%AE-http-%E5%92%8C-socks-%E4%BB%A3%E7%90%86">git 配置 http 和 socks 代理</a></li><li><a href="#git-%E9%85%8D%E7%BD%AE-ssh-%E4%BB%A3%E7%90%86">git 配置 ssh 代理</a></li><li><a href="#%E4%BC%98%E9%9B%85%E7%9A%84Commit%E4%BF%A1%E6%81%AF">优雅的Commit信息</a></li><li><a href="#commit%E5%B7%A5%E5%85%B7">commit工具</a></li><li><a href="#%E5%A3%B0%E6%98%8E">声明</a></li></ul><h2 id="展示帮助信息"><a href="#展示帮助信息" class="headerlink" title="展示帮助信息"></a>展示帮助信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span> -g</span><br></pre></td></tr></table></figure><p>The command output as below:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">The common Git guides are:</span><br><span class="line">   attributes          Defining attributes per path</span><br><span class="line">   <span class="keyword">cli</span>                 Git command-<span class="keyword">line</span> interface and conventions</span><br><span class="line">   core-<span class="keyword">tutorial</span>       A Git core <span class="keyword">tutorial</span> <span class="keyword">for</span> developers</span><br><span class="line">   cvs-migration       Git <span class="keyword">for</span> CVS users</span><br><span class="line">   diffcore            Tweaking diff output</span><br><span class="line">   everyday            A useful minimum <span class="keyword">set</span> of commands <span class="keyword">for</span> Everyday Git</span><br><span class="line">   glossary            A Git Glossary</span><br><span class="line">   hooks               Hooks used <span class="keyword">by</span> Git</span><br><span class="line">   ignore              Specifies intentionally untracked files to ignore</span><br><span class="line">   modules             Defining submodule properties</span><br><span class="line">   namespaces          Git namespaces</span><br><span class="line">   repository-layout    Git Repository Layout</span><br><span class="line">   revisions           Specifying revisions and ranges <span class="keyword">for</span> Git</span><br><span class="line">   <span class="keyword">tutorial</span>            A <span class="keyword">tutorial</span> introduction to Git</span><br><span class="line">   <span class="keyword">tutorial</span>-2          A <span class="keyword">tutorial</span> introduction to Git: part <span class="keyword">two</span></span><br><span class="line">   workflows           <span class="keyword">An</span> overview of recommended workflows with Git</span><br><span class="line"></span><br><span class="line">&#x27;git <span class="keyword">help</span> -a&#x27; and &#x27;git <span class="keyword">help</span> -<span class="keyword">g</span>&#x27; <span class="keyword">list</span> available subcommands and some concept guides. See &#x27;git <span class="keyword">help</span> &lt;command&gt;&#x27; or &#x27;git <span class="keyword">help</span> &lt;concept&gt;&#x27; to <span class="keyword">read</span> <span class="keyword">about</span> a specific subcommand or concept.</span><br></pre></td></tr></table></figure><h2 id="回到远程仓库的状态"><a href="#回到远程仓库的状态" class="headerlink" title="回到远程仓库的状态"></a>回到远程仓库的状态</h2><p>抛弃本地所有的修改，回到远程仓库的状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all &amp;&amp; git reset --hard origin/master</span><br></pre></td></tr></table></figure><h2 id="重设第一个-commit"><a href="#重设第一个-commit" class="headerlink" title="重设第一个 commit"></a>重设第一个 commit</h2><p>也就是把所有的改动都重新放回工作区，并<strong>清空所有的 commit</strong>，这样就可以重新提交第一个 commit 了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-ref -d HEAD</span><br></pre></td></tr></table></figure><h2 id="查看冲突文件列表"><a href="#查看冲突文件列表" class="headerlink" title="查看冲突文件列表"></a>查看冲突文件列表</h2><p>展示工作区的冲突文件列表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --name-only --diff-filter=U</span><br></pre></td></tr></table></figure><h2 id="展示工作区和暂存区的不同"><a href="#展示工作区和暂存区的不同" class="headerlink" title="展示工作区和暂存区的不同"></a>展示工作区和暂存区的不同</h2><p>输出<strong>工作区</strong>和<strong>暂存区</strong>的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><p>还可以展示本地仓库中任意两个 commit 之间的文件变动：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;commit-id&gt; &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="展示暂存区和最近版本的不同"><a href="#展示暂存区和最近版本的不同" class="headerlink" title="展示暂存区和最近版本的不同"></a>展示暂存区和最近版本的不同</h2><p>输出<strong>暂存区</strong>和本地最近的版本 (commit) 的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure><h2 id="展示暂存区、工作区和最近版本的不同"><a href="#展示暂存区、工作区和最近版本的不同" class="headerlink" title="展示暂存区、工作区和最近版本的不同"></a>展示暂存区、工作区和最近版本的不同</h2><p>输出<strong>工作区</strong>、<strong>暂存区</strong> 和本地最近的版本 (commit) 的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD</span><br></pre></td></tr></table></figure><h2 id="快速切换到上一个分支"><a href="#快速切换到上一个分支" class="headerlink" title="快速切换到上一个分支"></a>快速切换到上一个分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -</span><br></pre></td></tr></table></figure><h2 id="删除已经合并到-master-的分支"><a href="#删除已经合并到-master-的分支" class="headerlink" title="删除已经合并到 master 的分支"></a>删除已经合并到 master 的分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --merged master | grep -v <span class="string">&#x27;^\*\|  master&#x27;</span> | xargs -n 1 git branch -d</span><br></pre></td></tr></table></figure><h2 id="展示本地分支关联远程仓库的情况"><a href="#展示本地分支关联远程仓库的情况" class="headerlink" title="展示本地分支关联远程仓库的情况"></a>展示本地分支关联远程仓库的情况</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure><h2 id="关联远程分支"><a href="#关联远程分支" class="headerlink" title="关联远程分支"></a>关联远程分支</h2><p>关联之后，<code>git branch -vv</code> 就可以展示关联的远程分支名了，同时推送到远程仓库直接：<code>git push</code>，不需要指定远程仓库了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -u origin/mybranch</span><br></pre></td></tr></table></figure><p>或者在 push 时加上 <code>-u</code> 参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin/mybranch -u</span><br></pre></td></tr></table></figure><h2 id="列出所有远程分支"><a href="#列出所有远程分支" class="headerlink" title="列出所有远程分支"></a>列出所有远程分支</h2><p>-r 参数相当于：remote</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><h2 id="列出本地和远程分支"><a href="#列出本地和远程分支" class="headerlink" title="列出本地和远程分支"></a>列出本地和远程分支</h2><p>-a 参数相当于：all</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="查看远程分支和本地分支的对应关系"><a href="#查看远程分支和本地分支的对应关系" class="headerlink" title="查看远程分支和本地分支的对应关系"></a>查看远程分支和本地分支的对应关系</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote show origin</span><br></pre></td></tr></table></figure><h2 id="远程删除了分支本地也想删除"><a href="#远程删除了分支本地也想删除" class="headerlink" title="远程删除了分支本地也想删除"></a>远程删除了分支本地也想删除</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h2 id="创建并切换到本地分支"><a href="#创建并切换到本地分支" class="headerlink" title="创建并切换到本地分支"></a>创建并切换到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="从远程分支中创建并切换到本地分支"><a href="#从远程分支中创建并切换到本地分支" class="headerlink" title="从远程分支中创建并切换到本地分支"></a>从远程分支中创建并切换到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;local-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete &lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="重命名本地分支"><a href="#重命名本地分支" class="headerlink" title="重命名本地分支"></a>重命名本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><p>展示当前分支的最近的 tag</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git describe --tags --abbrev=0</span><br></pre></td></tr></table></figure><h2 id="查看标签详细信息"><a href="#查看标签详细信息" class="headerlink" title="查看标签详细信息"></a>查看标签详细信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -ln</span><br></pre></td></tr></table></figure><h2 id="本地创建标签"><a href="#本地创建标签" class="headerlink" title="本地创建标签"></a>本地创建标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag &lt;version-number&gt;</span><br></pre></td></tr></table></figure><p>默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;version-number&gt; -m <span class="string">&quot;v1.0 发布(描述)&quot;</span> &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="推送标签到远程仓库"><a href="#推送标签到远程仓库" class="headerlink" title="推送标签到远程仓库"></a>推送标签到远程仓库</h2><p>首先要保证本地创建好了标签才可以推送标签到远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local-version-number&gt;</span><br></pre></td></tr></table></figure><p>一次性推送所有标签，同步到远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><h2 id="删除本地标签"><a href="#删除本地标签" class="headerlink" title="删除本地标签"></a>删除本地标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程标签"><a href="#删除远程标签" class="headerlink" title="删除远程标签"></a>删除远程标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete tag &lt;tagname&gt;</span><br></pre></td></tr></table></figure><h2 id="切回到某个标签"><a href="#切回到某个标签" class="headerlink" title="切回到某个标签"></a>切回到某个标签</h2><p>一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b branch_name tag_name</span><br></pre></td></tr></table></figure><h2 id="放弃工作区的修改"><a href="#放弃工作区的修改" class="headerlink" title="放弃工作区的修改"></a>放弃工作区的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;file-name&gt;</span><br></pre></td></tr></table></figure><p>放弃所有修改：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure><h2 id="恢复删除的文件"><a href="#恢复删除的文件" class="headerlink" title="恢复删除的文件"></a>恢复删除的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rev-list -n 1 HEAD -- &lt;file_path&gt; <span class="comment">#得到 deleting_commit</span></span><br><span class="line"></span><br><span class="line">git checkout &lt;deleting_commit&gt;^ -- &lt;file_path&gt; <span class="comment">#回到删除文件 deleting_commit 之前的状态</span></span><br></pre></td></tr></table></figure><h2 id="以新增一个-commit-的方式还原某一个-commit-的修改"><a href="#以新增一个-commit-的方式还原某一个-commit-的修改" class="headerlink" title="以新增一个 commit 的方式还原某一个 commit 的修改"></a>以新增一个 commit 的方式还原某一个 commit 的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="回到某个-commit-的状态，并删除后面的-commit"><a href="#回到某个-commit-的状态，并删除后面的-commit" class="headerlink" title="回到某个 commit 的状态，并删除后面的 commit"></a>回到某个 commit 的状态，并删除后面的 commit</h2><p>和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;commit-id&gt;  <span class="comment">#默认就是-mixed参数。</span></span><br><span class="line"></span><br><span class="line">git reset --mixed HEAD^  <span class="comment">#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。</span></span><br><span class="line"></span><br><span class="line">git reset --soft HEAD~3  <span class="comment">#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  </span></span><br><span class="line"></span><br><span class="line">git reset --hard &lt;commit-id&gt;  <span class="comment">#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容</span></span><br></pre></td></tr></table></figure><h2 id="修改上一个-commit-的描述"><a href="#修改上一个-commit-的描述" class="headerlink" title="修改上一个 commit 的描述"></a>修改上一个 commit 的描述</h2><p>如果暂存区有改动，同时也会将暂存区的改动提交到上一个 commit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h2 id="查看-commit-历史"><a href="#查看-commit-历史" class="headerlink" title="查看 commit 历史"></a>查看 commit 历史</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="查看某段代码是谁写的"><a href="#查看某段代码是谁写的" class="headerlink" title="查看某段代码是谁写的"></a>查看某段代码是谁写的</h2><p>blame 的意思为‘责怪’，你懂的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="显示本地更新过-HEAD-的-git-命令记录"><a href="#显示本地更新过-HEAD-的-git-命令记录" class="headerlink" title="显示本地更新过 HEAD 的 git 命令记录"></a>显示本地更新过 HEAD 的 git 命令记录</h2><p>每次更新了 HEAD 的 git 命令比如 commit、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。<br>这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="修改作者名"><a href="#修改作者名" class="headerlink" title="修改作者名"></a>修改作者名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --author=<span class="string">&#x27;Author Name &lt;email@address.com&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="修改远程仓库的-url"><a href="#修改远程仓库的-url" class="headerlink" title="修改远程仓库的 url"></a>修改远程仓库的 url</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin &lt;URL&gt;</span><br></pre></td></tr></table></figure><h2 id="增加远程仓库"><a href="#增加远程仓库" class="headerlink" title="增加远程仓库"></a>增加远程仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><h2 id="列出所有远程仓库"><a href="#列出所有远程仓库" class="headerlink" title="列出所有远程仓库"></a>列出所有远程仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure><h2 id="查看两个星期内的改动"><a href="#查看两个星期内的改动" class="headerlink" title="查看两个星期内的改动"></a>查看两个星期内的改动</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git whatchanged --since=<span class="string">&#x27;2 weeks ago&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="把-A-分支的某一个-commit，放到-B-分支上"><a href="#把-A-分支的某一个-commit，放到-B-分支上" class="headerlink" title="把 A 分支的某一个 commit，放到 B 分支上"></a>把 A 分支的某一个 commit，放到 B 分支上</h2><p>这个过程需要 <code>cherry-pick</code> 命令，<a href="http://sg552.iteye.com/blog/1300713#bc2367928">参考</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch-name&gt; &amp;&amp; git cherry-pick &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="给-git-命令起别名"><a href="#给-git-命令起别名" class="headerlink" title="给 git 命令起别名"></a>给 git 命令起别名</h2><p>简化命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global <span class="built_in">alias</span>.&lt;handle&gt; &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line">比如：git status 改成 git st，这样可以简化命令</span><br><span class="line"></span><br><span class="line">git config --global alias.st status</span><br></pre></td></tr></table></figure><h2 id="存储当前的修改，但不用提交-commit"><a href="#存储当前的修改，但不用提交-commit" class="headerlink" title="存储当前的修改，但不用提交 commit"></a>存储当前的修改，但不用提交 commit</h2><p>详解可以参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000">廖雪峰老师的 git 教程</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><h2 id="保存当前状态，包括-untracked-的文件"><a href="#保存当前状态，包括-untracked-的文件" class="headerlink" title="保存当前状态，包括 untracked 的文件"></a>保存当前状态，包括 untracked 的文件</h2><p>untracked 文件：新建的文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash -u</span><br></pre></td></tr></table></figure><h2 id="展示所有-stashes"><a href="#展示所有-stashes" class="headerlink" title="展示所有 stashes"></a>展示所有 stashes</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><h2 id="回到某个-stash-的状态"><a href="#回到某个-stash-的状态" class="headerlink" title="回到某个 stash 的状态"></a>回到某个 stash 的状态</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply &lt;stash@&#123;n&#125;&gt;</span><br></pre></td></tr></table></figure><h2 id="回到最后一个-stash-的状态，并删除这个-stash"><a href="#回到最后一个-stash-的状态，并删除这个-stash" class="headerlink" title="回到最后一个 stash 的状态，并删除这个 stash"></a>回到最后一个 stash 的状态，并删除这个 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="删除所有的-stash"><a href="#删除所有的-stash" class="headerlink" title="删除所有的 stash"></a>删除所有的 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash clear</span><br></pre></td></tr></table></figure><h2 id="从-stash-中拿出某个文件的修改"><a href="#从-stash-中拿出某个文件的修改" class="headerlink" title="从 stash 中拿出某个文件的修改"></a>从 stash 中拿出某个文件的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;stash@&#123;n&#125;&gt; -- &lt;file-path&gt;</span><br></pre></td></tr></table></figure><h2 id="展示所有-tracked-的文件"><a href="#展示所有-tracked-的文件" class="headerlink" title="展示所有 tracked 的文件"></a>展示所有 tracked 的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files -t</span><br></pre></td></tr></table></figure><h2 id="展示所有-untracked-的文件"><a href="#展示所有-untracked-的文件" class="headerlink" title="展示所有 untracked 的文件"></a>展示所有 untracked 的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others</span><br></pre></td></tr></table></figure><h2 id="展示所有忽略的文件"><a href="#展示所有忽略的文件" class="headerlink" title="展示所有忽略的文件"></a>展示所有忽略的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others -i --exclude-standard</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的文件"><a href="#强制删除-untracked-的文件" class="headerlink" title="强制删除 untracked 的文件"></a>强制删除 untracked 的文件</h2><p>可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。<code>clean</code> 命令，<strong>注意两点</strong>：</p><ol><li>clean 后，删除的文件无法找回</li><li>不会影响 tracked 的文件的改动，只会删除 untracked 的文件</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;file-name&gt; -f</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的目录"><a href="#强制删除-untracked-的目录" class="headerlink" title="强制删除 untracked 的目录"></a>强制删除 untracked 的目录</h2><p>可以用来删除新建的目录，<strong>注意</strong>:这个命令也可以用来删除 untracked 的文件。详情见上一条</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;directory-name&gt; -df</span><br></pre></td></tr></table></figure><h2 id="展示简化的-commit-历史"><a href="#展示简化的-commit-历史" class="headerlink" title="展示简化的 commit 历史"></a>展示简化的 commit 历史</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=oneline --graph --decorate --all</span><br></pre></td></tr></table></figure><h2 id="把某一个分支导出成一个文件"><a href="#把某一个分支导出成一个文件" class="headerlink" title="把某一个分支导出成一个文件"></a>把某一个分支导出成一个文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bundle create &lt;file&gt; &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="从包中导入分支"><a href="#从包中导入分支" class="headerlink" title="从包中导入分支"></a>从包中导入分支</h2><p>新建一个分支，分支内容就是上面 <code>git bundle create</code> 命令导出的内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> repo.bundle &lt;repo-dir&gt; -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="执行-rebase-之前自动-stash"><a href="#执行-rebase-之前自动-stash" class="headerlink" title="执行 rebase 之前自动 stash"></a>执行 rebase 之前自动 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --autostash</span><br></pre></td></tr></table></figure><h2 id="从远程仓库根据-ID，拉下某一状态，到本地分支"><a href="#从远程仓库根据-ID，拉下某一状态，到本地分支" class="headerlink" title="从远程仓库根据 ID，拉下某一状态，到本地分支"></a>从远程仓库根据 ID，拉下某一状态，到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin pull/&lt;id&gt;/head:&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="详细展示一行中的修改"><a href="#详细展示一行中的修改" class="headerlink" title="详细展示一行中的修改"></a>详细展示一行中的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --word-diff</span><br></pre></td></tr></table></figure><h2 id="清除-gitignore-文件中记录的文件"><a href="#清除-gitignore-文件中记录的文件" class="headerlink" title="清除 gitignore 文件中记录的文件"></a>清除 gitignore 文件中记录的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean -X -f</span><br></pre></td></tr></table></figure><h2 id="展示所有-alias-和-configs"><a href="#展示所有-alias-和-configs" class="headerlink" title="展示所有 alias 和 configs"></a>展示所有 alias 和 configs</h2><p><strong>注意：</strong> config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> --list (当前目录)</span><br><span class="line">git config --global --list (全局)</span><br></pre></td></tr></table></figure><h2 id="展示忽略的文件"><a href="#展示忽略的文件" class="headerlink" title="展示忽略的文件"></a>展示忽略的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status --ignored</span><br></pre></td></tr></table></figure><h2 id="commit-历史中显示-Branch1-有的，但是-Branch2-没有-commit"><a href="#commit-历史中显示-Branch1-有的，但是-Branch2-没有-commit" class="headerlink" title="commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit"></a>commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> Branch1 ^Branch2</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中显示-GPG-签名"><a href="#在-commit-log-中显示-GPG-签名" class="headerlink" title="在 commit log 中显示 GPG 签名"></a>在 commit log 中显示 GPG 签名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --show-signature</span><br></pre></td></tr></table></figure><h2 id="删除全局设置"><a href="#删除全局设置" class="headerlink" title="删除全局设置"></a>删除全局设置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> &lt;entry-name&gt;</span><br></pre></td></tr></table></figure><h2 id="新建并切换到新分支上，同时这个分支没有任何-commit"><a href="#新建并切换到新分支上，同时这个分支没有任何-commit" class="headerlink" title="新建并切换到新分支上，同时这个分支没有任何 commit"></a>新建并切换到新分支上，同时这个分支没有任何 commit</h2><p>相当于保存修改，但是重写 commit 历史</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="展示任意分支某一文件的内容"><a href="#展示任意分支某一文件的内容" class="headerlink" title="展示任意分支某一文件的内容"></a>展示任意分支某一文件的内容</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show &lt;branch-name&gt;:&lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="clone-下来指定的单一分支"><a href="#clone-下来指定的单一分支" class="headerlink" title="clone 下来指定的单一分支"></a>clone 下来指定的单一分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b &lt;branch-name&gt; --single-branch https://github.com/user/repo.git</span><br></pre></td></tr></table></figure><h2 id="clone-最新一次提交"><a href="#clone-最新一次提交" class="headerlink" title="clone 最新一次提交"></a>clone 最新一次提交</h2><p>只会 clone 最近一次提交，将减少 clone 时间</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/user/repo.git</span><br></pre></td></tr></table></figure><h2 id="忽略某个文件的改动"><a href="#忽略某个文件的改动" class="headerlink" title="忽略某个文件的改动"></a>忽略某个文件的改动</h2><p>关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><p>恢复 track 指定文件的改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --no-assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><h2 id="忽略文件的权限变化"><a href="#忽略文件的权限变化" class="headerlink" title="忽略文件的权限变化"></a>忽略文件的权限变化</h2><p>不再将文件的权限变化视作改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.fileMode <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="以最后提交的顺序列出所有-Git-分支"><a href="#以最后提交的顺序列出所有-Git-分支" class="headerlink" title="以最后提交的顺序列出所有 Git 分支"></a>以最后提交的顺序列出所有 Git 分支</h2><p>最新的放在最上面</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git for-each-ref --sort=-committerdate --format=<span class="string">&#x27;%(refname:short)&#x27;</span> refs/heads/</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中查找相关内容"><a href="#在-commit-log-中查找相关内容" class="headerlink" title="在 commit log 中查找相关内容"></a>在 commit log 中查找相关内容</h2><p>通过 grep 查找，given-text：所需要查找的字段</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">&#x27;&lt;given-text&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="把暂存区的指定-file-放到工作区中"><a href="#把暂存区的指定-file-放到工作区中" class="headerlink" title="把暂存区的指定 file 放到工作区中"></a>把暂存区的指定 file 放到工作区中</h2><p>不添加参数，默认是 <code>-mixed</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f &lt;remote-name&gt; &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="git-配置-http-和-socks-代理"><a href="#git-配置-http-和-socks-代理" class="headerlink" title="git 配置 http 和 socks 代理"></a>git 配置 http 和 socks 代理</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy <span class="string">&#x27;http://127.0.0.1:8001&#x27;</span>   <span class="comment"># 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口</span></span><br><span class="line">git config --global http.proxy <span class="string">&#x27;http://127.0.0.1:8001&#x27;</span></span><br><span class="line">git config --global socks.proxy <span class="string">&quot;127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><h2 id="git-配置-ssh-代理"><a href="#git-配置-ssh-代理" class="headerlink" title="git 配置 ssh 代理"></a>git 配置 ssh 代理</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/config</span><br><span class="line">Host gitlab.com</span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p    <span class="comment"># 直接使用 shadowsocks 提供的 socks5 代理端口</span></span><br><span class="line"></span><br><span class="line">Host github.com</span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p    </span><br></pre></td></tr></table></figure><h2 id="脑图"><a href="#脑图" class="headerlink" title="脑图"></a>脑图</h2><p><img data-src="https://cdn.jonty.top/img/git.png"></p><h2 id="优雅的Commit信息"><a href="#优雅的Commit信息" class="headerlink" title="优雅的Commit信息"></a>优雅的Commit信息</h2><p>使用<a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines">Angular团队提交规范</a></p><p>主要有以下组成</p><ul><li>标题行: 必填, 描述主要修改类型和内容</li><li>主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等</li><li>页脚注释: 放 Breaking Changes 或 Closed Issues</li></ul><p>常用的修改项</p><ul><li>type: commit 的类型</li><li>feat: 新特性</li><li>fix: 修改问题</li><li>refactor: 代码重构</li><li>docs: 文档修改</li><li>style: 代码格式修改, 注意不是 css 修改</li><li>test: 测试用例修改</li><li>chore: 其他修改, 比如构建流程, 依赖管理.</li><li>scope: commit 影响的范围, 比如: route, component, utils, build…</li><li>subject: commit 的概述</li><li>body: commit 具体修改内容, 可以分为多行</li><li>footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接.</li></ul><h2 id="commit工具"><a href="#commit工具" class="headerlink" title="commit工具"></a>commit工具</h2><p>可以使用<a href="https://github.com/commitizen/cz-cli">cz-cli</a>工具代替 <code>git commit</code></p><p>全局安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g commitizen cz-conventional-changelog</span><br><span class="line"></span><br><span class="line">echo &#x27;&#123; &quot;path&quot;: &quot;cz-conventional-changelog&quot; &#125;&#x27; &gt; ~/.czrc</span><br></pre></td></tr></table></figure><p>全局安装后使用 <code>git cz</code> 代替 <code>git commit</code>就可以了,如下图</p><p><img data-src="https://cdn.jonty.top/img/gitcz.png"></p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width: 0" data-src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p><p><strong><a href="#%E7%9B%AE%E5%BD%95">⬆ 返回顶部</a></strong></p>]]></content>
    
    
    <summary type="html">常用的 Git 命令和一些小技巧</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="Share" scheme="https://jonty.top/tags/Share/"/>
    
    <category term="Git" scheme="https://jonty.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-07】- Blazor学生列表组件</title>
    <link href="https://jonty.top/2023/04/26/blazor-component/"/>
    <id>https://jonty.top/2023/04/26/blazor-component/</id>
    <published>2023-04-26T02:59:52.000Z</published>
    <updated>2023-04-26T03:10:32.130Z</updated>
    
    <content type="html"><![CDATA[<p>在此节中，我们实现一个Blazor组件—<strong>StudentList</strong>组件。</p><p>组件用于展示学生列表，如下图所示：</p><p><img data-src="https://cdn.jonty.top/img/202204241334464.png" alt="image-20220424133441270"></p><h2 id="StudentList-razor"><a href="#StudentList-razor" class="headerlink" title="StudentList.razor"></a>StudentList.razor</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/students&quot;</span><br><span class="line">@inherits StudentListListBase</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>StudentList<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    @foreach (var student in Students)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card m-3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>@student.FirstName @student.LastName<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;card-img-top imageThumbnail&quot;</span> <span class="attr">src</span>=<span class="string">&quot;@student.PhotoPath&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-footer text-center&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary m-1&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary m-1&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger m-1&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h2><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 指定当我们导航到此路径时显示此组件</span></span><br><span class="line">@page <span class="string">&quot;/&quot;</span> </span><br><span class="line">    </span><br><span class="line"><span class="meta"># 定义此组件的基类</span></span><br><span class="line">@inherits SutdentListBase </span><br></pre></td></tr></table></figure><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>使用 Bootstrap Card 显示， 为了遍历学生列表，我们使用了<code> foreach</code> 循环</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    @foreach (var student in Students)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card m-3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>@student.FirstName @student.LastName<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;card-img-top imageThumbnail&quot;</span> <span class="attr">src</span>=<span class="string">&quot;@student.PhotoPath&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-footer text-center&quot;</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary m-1&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary m-1&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger m-1&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="StudentListBase"><a href="#StudentListBase" class="headerlink" title="StudentListBase"></a>StudentListBase</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Components;</span><br><span class="line"><span class="keyword">using</span> StudentManagement.Models;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StudentManagement.Web.Pages</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StudentListListBase</span>: <span class="title">ComponentBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> IEnumerable&lt;Student&gt; Students &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Task <span class="title">OnInitializedAsync</span>(<span class="params"></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        LoadStudents();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">base</span>.OnInitializedAsync();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadStudents</span>(<span class="params"></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> s1 = <span class="keyword">new</span> Student()</span><br><span class="line">        &#123;</span><br><span class="line">            StudentId = <span class="number">1</span>,</span><br><span class="line">            FirstName = <span class="string">&quot;John&quot;</span>,</span><br><span class="line">            LastName = <span class="string">&quot;Hastings&quot;</span>,</span><br><span class="line">            Email = <span class="string">&quot;David@qq.com&quot;</span>,</span><br><span class="line">            DateOfBrith = <span class="keyword">new</span> DateTime(<span class="number">1980</span>, <span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">            Gender = Gender.Male,</span><br><span class="line">            StudentClass = <span class="keyword">new</span> StudentClass &#123;ClassId = <span class="number">1</span>, ClassName = <span class="string">&quot;计算机科学&quot;</span>&#125;,</span><br><span class="line">            PhotoPath = <span class="string">&quot;images/john.png&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> s2 = <span class="keyword">new</span> Student()</span><br><span class="line">        &#123;</span><br><span class="line">            StudentId = <span class="number">2</span>,</span><br><span class="line">            FirstName = <span class="string">&quot;Sam&quot;</span>,</span><br><span class="line">            LastName = <span class="string">&quot;Galloway&quot;</span>,</span><br><span class="line">            Email = <span class="string">&quot;Sam@qq.com&quot;</span>,</span><br><span class="line">            DateOfBrith = <span class="keyword">new</span> DateTime(<span class="number">1981</span>, <span class="number">12</span>, <span class="number">22</span>),</span><br><span class="line">            Gender = Gender.Male,</span><br><span class="line">            StudentClass = <span class="keyword">new</span> StudentClass &#123; ClassId = <span class="number">2</span>, ClassName = <span class="string">&quot;软件工程&quot;</span> &#125;,</span><br><span class="line">            PhotoPath = <span class="string">&quot;images/sam.jpg&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> s3 = <span class="keyword">new</span> Student()</span><br><span class="line">        &#123;</span><br><span class="line">            StudentId = <span class="number">3</span>,</span><br><span class="line">            FirstName = <span class="string">&quot;Mary&quot;</span>,</span><br><span class="line">            LastName = <span class="string">&quot;Smith&quot;</span>,</span><br><span class="line">            Email = <span class="string">&quot;mary@qq.com&quot;</span>,</span><br><span class="line">            DateOfBrith = <span class="keyword">new</span> DateTime(<span class="number">1979</span>, <span class="number">11</span>, <span class="number">11</span>),</span><br><span class="line">            Gender = Gender.Female,</span><br><span class="line">            StudentClass = <span class="keyword">new</span> StudentClass &#123; ClassId = <span class="number">3</span>, ClassName = <span class="string">&quot;通信工程&quot;</span> &#125;,</span><br><span class="line">            PhotoPath = <span class="string">&quot;images/mary.png&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> s4 = <span class="keyword">new</span> Student()</span><br><span class="line">        &#123;</span><br><span class="line">            StudentId = <span class="number">4</span>,</span><br><span class="line">            FirstName = <span class="string">&quot;Sara&quot;</span>,</span><br><span class="line">            LastName = <span class="string">&quot;Longway&quot;</span>,</span><br><span class="line">            Email = <span class="string">&quot;sara@qq.com&quot;</span>,</span><br><span class="line">            DateOfBrith = <span class="keyword">new</span> DateTime(<span class="number">1982</span>, <span class="number">9</span>, <span class="number">23</span>),</span><br><span class="line">            Gender = Gender.Female,</span><br><span class="line">            StudentClass = <span class="keyword">new</span> StudentClass &#123; ClassId = <span class="number">3</span>, ClassName = <span class="string">&quot;移动互联网&quot;</span> &#125;,</span><br><span class="line">            PhotoPath = <span class="string">&quot;images/sara.png&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Students = <span class="keyword">new</span> List&lt;Student&gt; &#123;s1, s2, s3, s4&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Blazor 组件有多种生命周期方法。<strong>OnInitializedAsync</strong>是较常用的生命周期方法。我们重写此方法用来加载学生数据。 </p><p>目前，我们在组件中<strong>硬编码</strong>了学生数据。随着我们课程的深入，我们将学习如何通过调用 RESTful API从数据库中加载这些数据。</p><p><strong>MainLayout.razor</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@inherits LayoutComponentBase</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">PageTitle</span>&gt;</span>S<span class="tag">&lt;/<span class="name">PageTitle</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">NavMenu</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;content px-4&quot;</span>&gt;</span></span><br><span class="line">            @Body</span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并在<code>Site.css</code>中添加头像的样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Site<span class="selector-class">.css</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.imageThumbnail</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Blazor系列翻译07- Blazor学生列表组件</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-06】- Blazor模型类</title>
    <link href="https://jonty.top/2023/04/26/blazor-model-classes/"/>
    <id>https://jonty.top/2023/04/26/blazor-model-classes/</id>
    <published>2023-04-26T02:49:16.000Z</published>
    <updated>2023-04-26T02:52:22.636Z</updated>
    
    <content type="html"><![CDATA[<p>按照教程进度，我们会开发一个员工管理系统，可以实现创建、读取、更新和删除员工等操作。</p><p>以下是需要的模型类：</p><ol><li>Student</li><li>ClassName</li><li>Gender</li></ol><h2 id="创建模型类"><a href="#创建模型类" class="headerlink" title="创建模型类"></a>创建模型类</h2><p>创建一个新的.NET类库项目，将项目命名为StudentManagement.Models。将解决方案命名为BlazorTutorial。</p><p><img data-src="https://cdn.jonty.top/img/202204191015829.png" alt="image-20220419101511752"></p><p>并创建对应的模型类</p><p><strong>Student.cs</strong>:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 学生</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 学生Id</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> StudentId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 姓</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 名</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 邮箱</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 生日</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> DateTime DateOfBrith &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 性别</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> Gender Gender &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 班级</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> StudentClass StudentClass &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 头像地址</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> PhotoPath &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>StudentName.cs</strong>:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 班级</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StudentClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 班级Id</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> ClassId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 班级名称</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> ClassName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Gender.cs</strong>:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Gender</span><br><span class="line">&#123;</span><br><span class="line">    Male,</span><br><span class="line">    Female,</span><br><span class="line">    Other</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择创建类库项目，可以在不同的项目中<strong>重用</strong>这些模型</p><p><img data-src="https://cdn.jonty.top/img/202204191439071.png" alt="image-20220419143947010"></p><p>我们会在<strong>Blazor Web</strong>应用程序中使用这些模型，随着课程的推进，我们会创建ASP.NET Core RESTful API，这些服务会提供<strong>Blazor</strong> 项目所需要的数据。同样的，我们的RESTful API项目中也会使用这些模型类。</p><h2 id="创建Blazor-Web项目"><a href="#创建Blazor-Web项目" class="headerlink" title="创建Blazor Web项目"></a>创建Blazor Web项目</h2><p>我们再创建一个新的<code>Blazor Server</code>项目，将其命名为<code>StudentManagement.Web</code>，这是一个允许我们对员工信息进行增删改查操作的Web应用程序。</p><p><code>StudentManagement.Web</code>依赖我们上面创建的模型类库，我们在<code>StudentManagement.Web</code>中添加对<code>StudentManagement.Models</code>项目的引用，并将<code>StudentManagement.Web</code>设为<strong>启动项目</strong></p><p><img data-src="https://cdn.jonty.top/img/202204191440212.png" alt="image-20220419144054166"></p><p>从<code>StudentManagement.Web</code>项目中删除以下文件和文件夹</p><ul><li>Data文件夹</li><li>Pages/Counter.razor</li><li>Pages/FetchData.razor</li><li>Pages/index.razor</li><li>Shared/SurveyPrompt.razor</li></ul><p>更改<strong>Program.cs</strong>：</p><p>删除以下引用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> StudentManagement.Web.Data;</span><br></pre></td></tr></table></figure><p>删除以下代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSingleton&lt;WeatherForecastService&gt;();</span><br></pre></td></tr></table></figure><p>如果你跟着步骤操作，现在的项目目录应该是这样的：</p><p><img data-src="https://cdn.jonty.top/img/202204191444223.png" alt="image-20220419144412162"></p><h2 id="创建StudentList组件"><a href="#创建StudentList组件" class="headerlink" title="创建StudentList组件"></a>创建StudentList组件</h2><p>在<code>StudentManagement.Web</code>项目中，右键单击<code>Pages</code>文件夹添加一个新的<strong>razor</strong>组件。命名为<code>StudentList.razor</code>组件，我们使用这个组件显示员工列表。</p><p>在<code>StudentList.razor</code>组件中包含以下<code>@page</code>指令，用来告诉Blazor在我们导航到<code>/student</code>路径时展示此组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/student&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>StudentList<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更改NvaMenu-razor组件"><a href="#更改NvaMenu-razor组件" class="headerlink" title="更改NvaMenu.razor组件"></a>更改NvaMenu.razor组件</h2><p><strong>删除</strong>以下2个导航栏菜单项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item px-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">NavLink</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;counter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;oi oi-plus&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Counter</span><br><span class="line">    <span class="tag">&lt;/<span class="name">NavLink</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item px-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">NavLink</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;fetchdata&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;oi oi-list-rich&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Fetch data</span><br><span class="line">    <span class="tag">&lt;/<span class="name">NavLink</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Blazor系列翻译06-Blazor模型类</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-05】-拆分Razor组件</title>
    <link href="https://jonty.top/2023/04/26/split-razor-component/"/>
    <id>https://jonty.top/2023/04/26/split-razor-component/</id>
    <published>2023-04-26T02:44:25.000Z</published>
    <updated>2023-04-26T02:45:54.298Z</updated>
    
    <content type="html"><![CDATA[<p>有2种方法可以将Razor组件HTML和C#代码拆分为各自独立的文件。</p><ol><li>部分类方法（partial class）</li><li>基类方法（base class）</li></ol><h2 id="单文件"><a href="#单文件" class="headerlink" title="单文件"></a>单文件</h2><p>HTML和C#代码都在<strong>一个文件</strong>中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// Counter.razor</span><br><span class="line"></span><br><span class="line">@page &quot;/counter&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Current count: @currentCount<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @<span class="attr">onclick</span>=<span class="string">&quot;IncrementCount&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line">    private int currentCount = 0;</span><br><span class="line"></span><br><span class="line">    private void IncrementCount()</span><br><span class="line">    &#123;</span><br><span class="line">        currentCount++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部分类文件"><a href="#部分类文件" class="headerlink" title="部分类文件"></a>部分类文件</h2><p>HTML保留在<code>Counter.razor</code>文件中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// Counter.razor</span><br><span class="line"></span><br><span class="line">@page &quot;/counter&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Current count: @currentCount<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @<span class="attr">onclick</span>=<span class="string">&quot;IncrementCount&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在编译组件时，会生成一个与组件文件同名的类。我们手动创建一个<code>Counter.razor.cs</code>的类文件，并在其中包含<code>@code</code>中的代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Counter.razor.cs</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Counter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> currentCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">IncrementCount</span>(<span class="params"></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentCount++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基类方法"><a href="#基类方法" class="headerlink" title="基类方法"></a>基类方法</h2><p>和部分类一样，使用基类方法HTML依旧保留在<code>Counter.razor</code>文件中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// Counter.razor</span><br><span class="line"></span><br><span class="line">@page &quot;/counter&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Current count: @currentCount<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @<span class="attr">onclick</span>=<span class="string">&quot;IncrementCount&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>把C#代码移动到单独的类<code>CounterBase</code>中，你可以将类名命名为任何名称，按照约定应该是组件名称+Base后缀</p><p>在示例中，组件名称为<code>Counter</code>，所以基类命名为<code>CounterBase</code>，继承自内置的<code>ComponentBase</code>类。此类位于Microsoft.AspNetCore.Components命名空间中。</p><p>最后，在Counter.razor文件中不要忘记包含以下继承指令。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@inherits CounterBase</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/counter&quot;</span><br><span class="line"></span><br><span class="line">@inherits CounterBase</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">PageTitle</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">PageTitle</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">role</span>=<span class="string">&quot;status&quot;</span>&gt;</span>Current count: @currentCount<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @<span class="attr">onclick</span>=<span class="string">&quot;IncrementCount&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Blazor系列翻译05-拆分Razor组件</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>Docker-修改docker数据存储目录</title>
    <link href="https://jonty.top/2023/04/12/how-to-change-docker-data-folder-configuration/"/>
    <id>https://jonty.top/2023/04/12/how-to-change-docker-data-folder-configuration/</id>
    <published>2023-04-12T03:39:18.000Z</published>
    <updated>2023-04-12T03:43:26.756Z</updated>
    
    <content type="html"><![CDATA[<p>1、停止正在运行的docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop docker</span><br></pre></td></tr></table></figure><p>2、创建文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/docker </span><br></pre></td></tr></table></figure><p>3、移动/var/lib/docker/目录到新目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /var/lib/docker/* /data/docker</span><br></pre></td></tr></table></figure><p>4、修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>增加以下配置即可</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;data-root&quot;</span>: <span class="string">&quot;/data/docker&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>v17.05.0 之后使用 data-root，旧版本请使用 graph</p></blockquote><p>5、删除/var/lib/docker/目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure><p>6、启动docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>如果启动失败，参考 <a href="https://medium.com/developer-space/how-to-change-docker-data-folder-configuration-33d372669056">How To Change Docker Data Folder Configuration</a> 进行更改</p><h3 id="其他方式："><a href="#其他方式：" class="headerlink" title="其他方式："></a>其他方式：</h3><p>通过软链接修改docker数据存储目录，软连接/data/docker 到 /var/lib/里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /data/docker /var/lib/docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker：如何修改docker数据存储目录</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Docker" scheme="https://jonty.top/tags/Docker/"/>
    
    <category term="Shell" scheme="https://jonty.top/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-04】- Razor组件</title>
    <link href="https://jonty.top/2023/03/23/razor-components/"/>
    <id>https://jonty.top/2023/03/23/razor-components/</id>
    <published>2023-03-23T02:08:52.000Z</published>
    <updated>2023-03-23T02:20:23.981Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Blazor是一个<strong>组件驱动</strong>的框架，这意味着组件是<strong>Blazor</strong>应用的<strong>基本构建块</strong>。</li><li>它们可以嵌套、复用，甚至可以在多个项目之间共享。</li><li>组件文件的扩展名为 <strong>.razor</strong></li></ul><p>下面是我们新建项目时创建的<strong>Counter</strong>组件</p><p><code>Counter.razor</code></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/counter&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">PageTitle</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">PageTitle</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">role</span>=<span class="string">&quot;status&quot;</span>&gt;</span>Current count: @currentCount<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @<span class="attr">onclick</span>=<span class="string">&quot;IncrementCount&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line">    private int currentCount = 0;</span><br><span class="line"></span><br><span class="line">    private void IncrementCount()</span><br><span class="line">    &#123;</span><br><span class="line">        currentCount++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 可以看到这是两种语言的结合</p><ul><li>HTML标记定义了组件的用户界面（即外观）。</li><li>定义处理逻辑的C#代码</li></ul><p><img data-src="https://cdn.jonty.top/img/image-20220412230131617.png" alt="image-20220412230131617"></p><p>在这个例子中：</p><ol><li>每次单击按钮时，C#代码都会将<code>currentCount</code>变量的值增加<code>1</code></li><li>单击按钮时，必须调用<code>IncrementCount()</code>函数，使用<code>onclick</code>属性调用的</li><li>在HTML中，要访问私有变量<code>currentCount</code>，需要使用<code>@</code>符号</li><li>C#代码放在<code>@code</code>块中，可以有多个<code>@code</code>块</li></ol><p>编译应用程序时，将 HTML 和 C# 代码转换为组件类。生成的类的名称与组件文件的名称匹配。组件文件名必须<strong>以大写字符开头</strong>。如果添加以小写字符开头的组件文件，则代码将无法编译，并且会出现以下编译器错误。</p><blockquote><p><strong>组件名称不能以小写字符开头</strong></p></blockquote><p><img data-src="https://cdn.jonty.top/img/image-20220412225942530.png" alt="image-20220412225942530"></p><p>请记住，Blazor Server项目在服务器上运行。</p><ul><li>在服务器和客户端浏览器之间建立 SignalR 连接。在最初呈现计数器组件之后并且当用户单击按钮时。</li><li>有关单击事件的信息通过 SignalR 连接发送到服务器。</li><li>作为对该事件的响应，组件会重新生成，但不会将整个 HTML 发送回客户端。它只是差异，即渲染树中的差异，在这种情况下，是发送到客户端浏览器的新计数器值。</li><li>由于仅更新页面的更改部分而不是重新加载和更新整个页面，因此应用程序感觉更快，对用户的响应更快。</li></ul><h2 id="嵌套Blazor组件"><a href="#嵌套Blazor组件" class="headerlink" title="嵌套Blazor组件"></a>嵌套Blazor组件</h2><p>呈现Counter组件的一种方法是在浏览器中导航到<code>/counter</code>。此路径由组件顶部的<code>@page</code>指令指定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@page &quot;/counter&quot;</span><br></pre></td></tr></table></figure><p>一个组件也可以使用 HTML 语法嵌套在另一个组件中。例如，使用**&lt; Counter /&gt;<strong>将</strong>Counter**组件嵌套在其他组件中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@page <span class="string">&quot;/test&quot;</span></span><br><span class="line">&lt;PageTitle&gt;test&lt;/PageTitle&gt;</span><br><span class="line">&lt;h3&gt;test&lt;/h3&gt;</span><br><span class="line">    </span><br><span class="line">@* 嵌套组件 *@</span><br><span class="line">&lt;Counter&gt;&lt;/Counter&gt;</span><br><span class="line">@code &#123;&#125;</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20220412230557300.png" alt="image-20220412230557300"></p><h2 id="组件存放位置"><a href="#组件存放位置" class="headerlink" title="组件存放位置"></a>组件存放位置</h2><p>组件可以放在Blazor项目中任何位置。将生成网页的组件放置在<strong>Pages</strong>文件夹中并将可重用的非页面组件放置在<strong>Shared</strong>文件夹中是一种很好的做法。</p><p>如果需要，还可以将它们放在项目中完全不同的<strong>自定义文件夹</strong>中。</p><h2 id="拆分组件HTML和C-代码"><a href="#拆分组件HTML和C-代码" class="headerlink" title="拆分组件HTML和C#代码"></a>拆分组件HTML和C#代码</h2><p>在此示例中，HTML 和 C# 都在一个文件中。这对于像这个计数器这样的简单组件来说很好，但是将 HTML 和 C# 代码分离到它们自己的文件中通常是一个好习惯。它不仅从维护的角度来看很好，而且也很容易进行单元测试。</p><p>有 2 种方法，将组件 HTML 和 C# 代码拆分为各自独立的文件。</p><ol><li>部分文件方法</li><li>基类方法</li></ol><p>我们将在下一节中讨论这两种方法。</p>]]></content>
    
    
    <summary type="html">Blazor系列翻译04-Razor组件</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-03】- Blazor项目结构</title>
    <link href="https://jonty.top/2023/03/23/blazor-project-structure/"/>
    <id>https://jonty.top/2023/03/23/blazor-project-structure/</id>
    <published>2023-03-23T02:07:10.000Z</published>
    <updated>2023-03-23T02:20:23.981Z</updated>
    
    <content type="html"><![CDATA[<p>了解ASP.NET Core Blazor项目中的文件和文件夹</p><p><img data-src="https://cdn.jonty.top/img/image-20220411230426968.png" alt="image-20220411230426968"></p><h2 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h2><p>应用程序启动代码，用于：</p><ul><li>配置应用所需服务</li><li>请求管道注册中间件</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"><span class="keyword">using</span> StudentManagement.Api.Models;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add services to the container.</span></span><br><span class="line"></span><br><span class="line">builder.Services.AddControllers();</span><br><span class="line">builder.Services.AddEndpointsApiExplorer();</span><br><span class="line">builder.Services.AddSwaggerGen();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Configure the HTTP request pipeline.</span></span><br><span class="line"><span class="keyword">if</span> (app.Environment.IsDevelopment())</span><br><span class="line">&#123;</span><br><span class="line">    app.UseSwagger();</span><br><span class="line">    app.UseSwaggerUI();</span><br><span class="line">&#125;</span><br><span class="line">app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">app.MapControllers();</span><br><span class="line"></span><br><span class="line">app.Run();</span><br></pre></td></tr></table></figure><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p><code>builder</code> 是一个 <code>WebApplicationBuilder</code>，用于将配置、日志和其他服务添加到<strong>DI</strong>容器中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册服务到容器中</span></span><br><span class="line"></span><br><span class="line">builder.Services.AddControllers();</span><br><span class="line">builder.Services.AddEndpointsApiExplorer();</span><br><span class="line">builder.Services.AddSwaggerGen();</span><br></pre></td></tr></table></figure><h3 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h3><p>请求处理管道由一系列中间件组件组成。 每个组件在 <a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/http-context?view=aspnetcore-6.0"><code>HttpContext</code></a> 上执行操作，调用管道中的下一个中间件或终止请求。</p><p>通过调用 <code>Use&#123;Feature&#125;</code> 扩展方法，向管道添加中间件组件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册HTTP请求管道</span></span><br><span class="line"><span class="keyword">if</span> (app.Environment.IsDevelopment())</span><br><span class="line">&#123;</span><br><span class="line">    app.UseSwagger();</span><br><span class="line">    app.UseSwaggerUI();</span><br><span class="line">&#125;</span><br><span class="line">app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">app.MapControllers();</span><br><span class="line"></span><br><span class="line">app.Run();</span><br></pre></td></tr></table></figure><h2 id="wwwroot"><a href="#wwwroot" class="headerlink" title="wwwroot"></a>wwwroot</h2><p>对于所有项目类型，这个文件夹包含了静态文件，如图片、样式表等。</p><h2 id="App-razor"><a href="#App-razor" class="headerlink" title="App.razor"></a>App.razor</h2><p>这是应用程序的根组件。它使用了内置的Router组件，并设置了客户端路由。正是这个Router组件拦截了浏览器的导航，并渲染出与请求地址匹配的页面。当找到匹配后，Router使用Found属性来显示内容。如果没有找到匹配的内容，NotFound属性用于显示消息–对不起，这个地址没有任何内容。</p><h2 id="页面文件夹"><a href="#页面文件夹" class="headerlink" title="页面文件夹"></a>页面文件夹</h2><p>这个文件夹包含_Host  Razor Pages和组成Brazor应用程序的可路由组件。这些组件的扩展名是**.razor**。</p><ul><li>索引组件 (Index.razor) - 当我们导航到根应用程序的URL时显示。</li><li>Counter组件 (Counter.razor) - 当我们导航到路径/counter时显示。</li><li>FetchData组件(FetchData.razor) - 当我们导航到路径/fetchdata时显示。</li><li>Error组件(Error.razor) - 当blazor应用程序中出现未处理的异常时，会被渲染。</li></ul><h2 id="共享文件夹"><a href="#共享文件夹" class="headerlink" title="共享文件夹"></a>共享文件夹</h2><p>当我们导航到/fetchdata的路径时显示。顾名思义，包含了共享的组件</p><h2 id="MainLayout组件-MainLayout-razor"><a href="#MainLayout组件-MainLayout-razor" class="headerlink" title="MainLayout组件 (MainLayout.razor)"></a>MainLayout组件 (MainLayout.razor)</h2><p>应用程序的主要布局组件</p><h2 id="NavMenu组件-NavMenu-razor"><a href="#NavMenu组件-NavMenu-razor" class="headerlink" title="NavMenu组件 (NavMenu.razor)"></a>NavMenu组件 (NavMenu.razor)</h2><p>实现了侧边栏上的导航菜单。NavLink组件，渲染导航链接到其他Razor组件，如索引、计数器和fetchdata组件。这个NavLink组件足够智能，如果导航菜单项当前显示的是它的组件，那么它可以高亮显示导航菜单项。</p><h2 id="Imports-razor"><a href="#Imports-razor" class="headerlink" title="_Imports.razor"></a>_Imports.razor</h2><p>这就像<strong>Asp.Net Core MVC</strong>项目中的**_ViewImports.cshtml**文件。这个文件包含了常用的命名空间，所以我们不需要在每一个razor组件中都包含它们。</p><h2 id="wwwroot-index-html"><a href="#wwwroot-index-html" class="headerlink" title="wwwroot/index.html"></a>wwwroot/index.html</h2><p>这是<strong>Blazor WebAssembly</strong>项目中的根页面，以<strong>html</strong>页面的形式实现。当第一个请求进入应用程序时，最初服务的就是这个页面。它有标准的HTML、HEAD和BODY标记。它指定了根应用程序组件<strong>App.razor</strong>应该被渲染到哪里。可以在根项目文件夹中找到这个App.razor根组件。它作为一个HTML元素<app>包含在页面中。我们将在接下来的视频中详细讨论razor组件。</p><p>这个<strong>index.html</strong>页面还加载了<strong>Blazor WebAssembly JavaScript</strong>文件（**_framework/blazor.webassembly.js**）。这个文件就是负责下载的文件。</p><ul><li>编译后的blazor应用程序，它的依赖关系和.NET运行时。</li><li>它还会初始化运行时，以便在浏览器中运行blazor应用程序。</li></ul><h2 id="Pages-Host-cshtml"><a href="#Pages-Host-cshtml" class="headerlink" title="Pages/_Host.cshtml"></a>Pages/_Host.cshtml</h2><p>这是应用程序的根页面，通过调用 MapFallbackToPage(“/_Host”) 方法指定。它的实现是<strong>Razor</strong>页面。</p><p>这个页面是在第一个请求到达应用程序时提供的。它具有标准的 HTML、HEAD 和 BODY 标签。它还指定了根应用程序组件 App 组件 (App.razor) 必须呈现的位置。最后，它还加载 blazor.server.js JavaScript 文件，该文件在服务器和客户端浏览器之间建立实时 SignalR 连接。此连接用于在客户端和服务器之间交换信息。SignalR 是一个很好的框架，用于向应用程序添加实时 Web 功能。 </p><h2 id="Data-folder-Blazor-Server"><a href="#Data-folder-Blazor-Server" class="headerlink" title="Data folder (Blazor Server)"></a>Data folder (Blazor Server)</h2><p>包含与示例 WeatherForecast 服务相关的代码文件</p><h2 id="appsettings-json-Blazor-Server"><a href="#appsettings-json-Blazor-Server" class="headerlink" title="appsettings.json (Blazor Server)"></a>appsettings.json (Blazor Server)</h2><p>就像 <strong>ASP.NET Core MVC</strong>项目一样，Blazor 项目也使用此文件来存储配置设置。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>Blazor Server 和 Blazor WebAssembly 只是我们托管 Blazor 应用程序的两种不同方式。</p><p>Blazor 应用程序中的所有内容都是 razor 组件。组件是 Blazor 应用程序的基本构建块。</p><p>对于 Blazor 服务器应用和 Blazor WebAssembly 应用，我们构建这些组件的方式是相同的。</p><p>因此，只有一个 Blazor 框架，而构建的方式，<strong>Blazor Server</strong>应用程序和 <strong>Blazor WebAssembly</strong> 应用程序非常相似。</p><p><strong>唯一的区别</strong>在于应用程序的<strong>托管方式</strong>。</p>]]></content>
    
    
    <summary type="html">Blazor系列翻译03-Blazor项目结构</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-02】- Blazor的托管模型</title>
    <link href="https://jonty.top/2023/03/23/blazor-hosting-models/"/>
    <id>https://jonty.top/2023/03/23/blazor-hosting-models/</id>
    <published>2023-03-23T01:50:13.000Z</published>
    <updated>2023-03-23T02:20:04.989Z</updated>
    
    <content type="html"><![CDATA[<p>你如果还没有安装开发环境，可以前往<a href="./what-is-blazor.md#Blazor%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">Blazor介绍</a>的下方有机器配置说明</p><p>我们将创建我们的第一个Blazor项目。</p><p>事实上，我们将创建2个Blazor项目。</p><ul><li>一个是服务器端托管:Blazor Server</li><li>另一个是客户端托管: Blazor WebAssembly</li></ul><p>然后，我们将运行这两个项目，看看它们在执行中的区别。</p><ul><li>了解这两种托管模式的区别以及各自的优缺点。</li></ul><h2 id="创建Blazor应用程序"><a href="#创建Blazor应用程序" class="headerlink" title="创建Blazor应用程序"></a>创建Blazor应用程序</h2><p><img data-src="https://cdn.jonty.top/img/image-20220411221907210.png" alt="image-20220411221907210"></p><h2 id="Bloazor托管模式"><a href="#Bloazor托管模式" class="headerlink" title="Bloazor托管模式"></a>Bloazor托管模式</h2><p>Blazor有两种托管模式：Blazor WebAssembly（客户端托管模式）和Blazor Server（服务器托管模式）。</p><p><img data-src="https://cdn.jonty.top/img/blazorhostingmodelsexplained.png"></p><p>正如模板名称所暗示的那样，使用Blazor Server App模板来创建一个带有服务器托管模式的Blazor应用程序，使用Blazor WebAssembly模板来创建一个带有客户端托管模式的Blazor应用程序。</p><p>Blazor服务器与Blazor WebAssembly的比较<br>2种项目类型的项目结构和布局没有太大的区别。</p><h2 id="blazor-server-vs-blazor-webassembly"><a href="#blazor-server-vs-blazor-webassembly" class="headerlink" title="blazor server vs blazor webassembly"></a>blazor server vs blazor webassembly</h2><p>我们将在下一个节中详细讨论这些不同文件和文件夹的目的。</p><p><img data-src="https://cdn.jonty.top/img/blazorservervsblazorwebassembly.png"></p><h2 id="在-Visual-Studio-中配置多个启动项目"><a href="#在-Visual-Studio-中配置多个启动项目" class="headerlink" title="在 Visual Studio 中配置多个启动项目"></a>在 Visual Studio 中配置多个启动项目</h2><p>我们可以在Visual Studio中配置多个项目作为<strong>StartUp项目</strong>。</p><p>具体步骤如下:</p><p>在解决方案资源管理器中右键点击解决方案名称，选择设置<strong>StartUp项目</strong>选项</p><p><img data-src="https://cdn.jonty.top/img/image-20220411222732534.png" alt="image-20220411222732534"></p><p>选择 <strong>多个启动项目</strong>单选按钮。针对每个要设置为启动项目的项目，从 <strong>操作</strong>下拉列表中选择 <strong>启动</strong>。</p><p><img data-src="https://cdn.jonty.top/img/image-20220411222844570.png" alt="image-20220411222844570"></p><h2 id="Blazor-WebAssembly托管模式"><a href="#Blazor-WebAssembly托管模式" class="headerlink" title="Blazor WebAssembly托管模式"></a>Blazor WebAssembly托管模式</h2><p>在这种托管模式下，应用程序直接在浏览器中的WebAssembly上。</p><p>因此，应用程序所需要的一切，即编译后的应用程序，它的依赖关系和.NET运行时都会从服务器下载到客户端浏览器，这一点和Angular、Vue、React等开发模式是一致的。<br>Blazor WebAssembly应用程序可以完全在客户端上运行，而不需要连接到服务器，或者可以使用Web API调用或SignalR来配置它与服务器进行交互。</p><p><img data-src="https://cdn.jonty.top/img/BlazorWebAssemblyhostingmodel.png" alt="Blazor WebAssembly 托管模型"></p><p><img data-src="https://cdn.jonty.top/img/image-20220411223744216.png" alt="image-20220411223744216"></p><h3 id="Blazor-WebAssembly托管模式的好处。"><a href="#Blazor-WebAssembly托管模式的好处。" class="headerlink" title="Blazor WebAssembly托管模式的好处。"></a>Blazor WebAssembly托管模式的好处。</h3><ul><li>一个Blazor WebAssembly应用程序可以完全在客户端机器上运行。它可以离线工作。当失去了与服务器的网络连接时，客户端应用程序可以继续运行</li></ul><ul><li><p>它也可以很容易地作为一个渐进式的Web App运行，这意味着客户可以选择将我们的App安装到他们的设备上，在没有任何网络连接的情况下随时运行。</p></li><li><p>Web Assembly在客户端上运行，在浏览器内部，因此可以作为静态文件部署。尽管如此，由于浏览器的安全限制，Blazor Wasm应用程序不会直接从本地文件系统中运行。</p></li></ul><ul><li>当应用程序从服务器下载到客户端后，平时的计算工作使用的是客户端的资源和能力。在客户机上运行的代码，意味着服务器的负载大大降低。</li></ul><ul><li>我们不需要一个完整的ASP.NET Core web服务器来托管应用程序。我们只需要一台服务器，便可以将应用程序传送到客户端的浏览器上。这意味着我们可以在互联网上的任何地方，在云端，在Azure上作为静态网站，甚至在CDN内容交付网络上，将应用程序托管在自己的服务器上。</li></ul><h3 id="Blazor-WebAssembly托管的缺点"><a href="#Blazor-WebAssembly托管的缺点" class="headerlink" title="Blazor WebAssembly托管的缺点"></a>Blazor WebAssembly托管的缺点</h3><p>Blazor WebAssembly简称为Blazor Wasm。</p><ul><li><p>第一次请求通常需要较长的时间，因为<code>blazor.webassembly.js</code>文件对客户端应用程序进行引导,所以整个应用程序、其依赖关系和.NET运行时必须下载到客户端浏览器。但请记住，这只是第一次请求所花费的时间比平时长。如果那个相同的客户端稍后访问该应用程序，通常会快速启动，因为浏览器会缓存文件。</p></li><li><p>由于应用程序完全在客户端浏览器上运行，所以它受限于浏览器的计算能力。</p></li><li><p>根据应用的性质，需要有一定能力的客户端硬件和软件。例如，从软件的角度来看，至少需要一个支持WebAssembly的浏览器。</p></li></ul><ul><li><p>Mono框架解释的是.NET中间语言，因此比运行服务器端Blazor要慢。Ahead-of-time (AOT) 编译计划在未来的一个版本中进行。</p></li><li><p>Blazor Wasm还不支持一个以上的线程，所以所有的处理都发生在UI线程上–但服务器/JavaScript等的调用是异步进行的，所以不会阻碍UI的响应速度。</p></li><li><p>与服务器端不同的是，Blazor Wasm还不支持在Visual Studio中进行调试。在浏览器内调试C#代码是可能的，但尽管可行，但这并不是最好的体验。</p></li><li><p>此外，Blazor Wasm只适用于较新的浏览器，并且不支持搜索引擎（除非我们启用服务器端预渲染）。</p></li></ul><h2 id="Blazor-Server服务器托管模式"><a href="#Blazor-Server服务器托管模式" class="headerlink" title="Blazor Server服务器托管模式"></a>Blazor Server服务器托管模式</h2><p>在这种托管模式下，应用程序需要在服务器上执行。在客户端和服务器之间建立了一个SignalR连接。当一个事件发生在客户端，例如点击按钮，事件的信息通过SignalR连接发送到服务器。服务器处理该事件，并计算出生成的HTML的差异（差值）。整个HTML不会再次被发送到客户端，只有差值通过SignalR连接发送到客户端。然后浏览器更新UI。由于只应用了差异化的内容来更新UI，所以应用程序感觉更快，对用户的响应也更快。</p><p><img data-src="https://cdn.jonty.top/img/BlazorServerhostingmodel.png" alt="Blazor 服务器托管模型"></p><p><img data-src="https://cdn.jonty.top/img/image-20220411223908163.png" alt="image-20220411223908163"></p><h3 id="Blazor服务器托管模式的好处"><a href="#Blazor服务器托管模式的好处" class="headerlink" title="Blazor服务器托管模式的好处"></a>Blazor服务器托管模式的好处</h3><ul><li><p>Blazor服务器端在将HTML内容发送到客户端的浏览器之前，会预先渲染HTML内容。这使得它对搜索引擎友好，而且没有明显的启动时间。</p></li><li><p>由于下载量明显小于Blazor WebAssembly应用程序，因此加载速度更快</p></li><li><p>由于该应用程序运行在服务器上，因此它可以充分利用服务器的功能，包括使用任何.NET Core兼容的API。<br>客户端只需要一个浏览器就可以使用该应用。即使是不支持WebAssembly的浏览器也可以使用。</p></li><li><p>更加安全，因为应用程序的.NET/C#代码不会被发送到客户端。</p></li></ul><ul><li>Blazor服务器端应用程序可以在旧的浏览器上运行，因为不需要Web汇编，只需要HTML和JavaScript。由于代码是在服务器上执行的，所以也可以在Visual Studio中调试我们的.NET代码。</li></ul><h3 id="Blazor服务器托管-NET的缺点。"><a href="#Blazor服务器托管-NET的缺点。" class="headerlink" title="Blazor服务器托管.NET的缺点。"></a>Blazor服务器托管.NET的缺点。</h3><ul><li>需要一个完整的ASP.NET Core服务器来托管应用程序。在无服务器部署场景，比如希望从CDN中运行应用程序，是不可能实现的。</li><li>需要始终保持与服务器的主动连接。这意味着需要保持服务器24小时不间断地运行。如果服务器瘫痪，应用程序就会停止工作。</li><li>由于每个用户的交互都需要往返于服务器之间，与Blazor WebAssembly托管相比，通常会有较高的延迟。</li></ul><ul><li>Blazor服务器端为当前客户端建立一个内存内会话，并使用SignalR在服务器上运行的.NET和客户端的浏览器之间进行通信。所有的内存和CPU的使用都是以服务器为代价的，对所有用户来说。这也意味着客户端被绑定到最初服务于它的服务器上，所以不具备负载均衡功能，但是我们可以通过使用Azure SignalR服务与Blazor服务器应用程序来克服这个可扩展性问题。这个服务可以让Blazor Server app通过支持大量的并发SignalR连接来实现良好的扩展性。</li></ul>]]></content>
    
    
    <summary type="html">Blazor系列翻译02-Blazor的托管模型</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>AQL抽样方法介绍</title>
    <link href="https://jonty.top/2023/02/17/acceptance-quality-limit/"/>
    <id>https://jonty.top/2023/02/17/acceptance-quality-limit/</id>
    <published>2023-02-17T08:03:55.000Z</published>
    <updated>2023-03-23T01:56:11.471Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://cdn.jonty.top/img/AQL-rev-8.jpg" alt="AQL-rev-8"></p><h2 id="AQL的定义"><a href="#AQL的定义" class="headerlink" title="AQL的定义"></a>AQL的定义</h2><p>AQL原来叫<strong>合格质量水平（Acceptable Quality Level）</strong>，在新版国家标准《GB/T 2828.1-2003 计数抽样检验程序 第1部分：按接收质量限（AQL）检索的逐批检验抽样计划》中，AQL的全称被改为了<strong>接收质量限制（Acceptance Quality Limit）</strong>，其定义为：当一个连续系列批被提交验收抽样时，可允许的最差过程平均质量水平。</p><h2 id="检验水平"><a href="#检验水平" class="headerlink" title="检验水平"></a>检验水平</h2><p>在AQL中，有三种一般检验水平（Ⅰ、Ⅱ、Ⅲ）和四种特殊检验水平（S-1、S-2、S-3、S-4）。<br>在三种一般检验水平中，LEVELⅡ是常规水平，也是最经常采用的水平。从LEVELⅠ到LEVELⅢ抽样的数量逐渐增加。LEVELⅠ的抽样数是LEVELⅡ的40％，适用于品质较为稳定或产品出现不一致可能性极小的状况。LEVELⅢ的抽样数是LEVELⅡ的160％，加大检验的样本数量可以降低接受不合格产品的可能性。<br>四种特殊检验水平的特点是抽样数量少，因为在某些情况下，例如检验的成本高、检验所花费的时间长、货物的品质比较稳定（单一产品的重复加工），通过少量的抽样检验就可以反应总体的品质水平。从S-1到S-4抽样检验数逐步增加。在服装辅料的检验中有时会采用特殊检验水平，例如拉链、纽扣等的检验。</p><h2 id="抽样方案"><a href="#抽样方案" class="headerlink" title="抽样方案"></a>抽样方案</h2><p>AQL有一次、二次、多次（五次）3种抽样方案。确定抽样方案可以从下面几个方面来考虑：<br>1）简便易行：一次优于二次，二次优于五次。<br>2）平均样本量：五次少于二次，二次少于一次。<br>3）管理难度：五次难于二次，二次难于一次。<br>4）取样的难易程度：取样麻烦时，一次优于二次，二次优于五次。<br>5）试验时间的长短：根据单个试验时间的长短和是否可以多个样品同时进行试验来确定总的试验时间。</p><h2 id="严格程度"><a href="#严格程度" class="headerlink" title="严格程度"></a>严格程度</h2><p>AQL中制定了三种严格程度：正常（NORMAL）、加严（TIGHTENED）、放宽（REDUCED）。<br>正常检验是最常用的检验水平，刚开始检验新的供应商生产的货物时，应采用正常检验。<br>一旦采用了正常、严格、放宽中的任何一种，那么在以后对同系列或同类型产品的检验中都应采取这一标准，除非供应商的产品品质发生了变动。</p><h3 id="AQL值"><a href="#AQL值" class="headerlink" title="AQL值"></a>AQL值</h3><p>对于不同的质量水平或要求，AQL有多种规定的数值，从0.010~1000。服装业最常用的AQL值是2.5，要求高一些的用1.5，要求稍低的用4.0。不同的AQL值体现了不同的质量水平，通常AQL值越小代表品质要求越高。</p><h2 id="转移规则和程序"><a href="#转移规则和程序" class="headerlink" title="转移规则和程序"></a>转移规则和程序</h2><h3 id="正常到加严"><a href="#正常到加严" class="headerlink" title="正常到加严"></a>正常到加严</h3><p>当正在采用正常检验时，只要初次检验中连续5批或少于5批中有2批是不可接收的，则转移到加严检验。<br>（注：初次检验指第一次检验，区别于拒收后的再次提交批的检验。再次提交批的检验结果不参与转移。）</p><h3 id="加严到正常"><a href="#加严到正常" class="headerlink" title="加严到正常"></a>加严到正常</h3><p>当正在采用加严检验时，如果初次检验的接连5批已被认为是可接收的，应恢复正常检验。</p><h3 id="正常到放宽"><a href="#正常到放宽" class="headerlink" title="正常到放宽"></a>正常到放宽</h3><p>当正在采用正常检验时，如果连续10次检验都合格、并且生产处于稳定状态的话，可以转移到放宽检验。<br>（注：这个跟GB/T 2828.1-2003的规定不同，因为GB/T 2828.1-2003的条件比较负责，所以可以考虑采用这个比较简单的方法。）</p><h3 id="放宽到正常"><a href="#放宽到正常" class="headerlink" title="放宽到正常"></a>放宽到正常</h3><p>当正在执行放宽检验时，如果初次检验出现下列任一情况，应恢复正常检验：<br>a）一个批未被接收；<br>b）生产不稳定或延迟；<br>c）认为恢复正常检验是正当的其他情况。</p><h3 id="暂停检验"><a href="#暂停检验" class="headerlink" title="暂停检验"></a>暂停检验</h3><p>如果在初次加严检验的一系列连续批中未接受批的累计数达到5批，应暂时停止检验。直到供应商为改进所提供产品或服务的质量已采取行动，而且负责部门承认此行动可能有效时，才能恢复检验。恢复检验应从使用加严检验开始。</p><p>放宽检验是非强制性的，在条件不成熟或无把握的情况下可以不执行。<br>暂停检验也可以不执行。<br>至少要执行正常和加严检验之间的转移规则。</p><h3 id="二次抽样方案"><a href="#二次抽样方案" class="headerlink" title="二次抽样方案"></a>二次抽样方案</h3><p>第一次检验的样品数量应等于该方案给出的第一样本量。如果第一样本中发现的不合格数小于或等于第一接收数，则该批可接收；如果第一样本中发现的不合格品数大于或等于第一拒收数，则该批不可接收。<br>如果第一样本中发现的不合格品数介于第一接收数与第二拒收数之间，应检验由方案给出样本量的第二样本并累计在第一样本和第二样本中发现的不合格品数。如果不合格品累计数小于或等于第二接收数，则判定批可接收；如果不合格品累计数大于或等于第二拒收数，则判定该批不可接收。<br>二次抽样方案的目的是通过检验较少样品数而节约时间，然而当必须进行第二次检验时，抽样检验的总数要超过一次抽样检验的数量，所以二次抽样方案适合于质量比较稳定的产品。</p><h3 id="不合格产品的判定"><a href="#不合格产品的判定" class="headerlink" title="不合格产品的判定"></a>不合格产品的判定</h3><p>根据不同类型的服装可参考相应的行业标准或企业标准，如T恤和Polo衫可参考纺织行业标准《FZ/T 73008-2002 针织T恤衫》。<br>有的公司以一件衣服上有一个或以上严重疵点为一个不合格品，一件衣服上有3个轻微疵点也算一件不合格品。<br>有的公司采用的是记点的方式，即计算样本中的不合格数来判定。</p><p>当样本数超过批量时，应该以整批作为样本（全检），判定数不变。</p><h3 id="AQL抽样检验的方法和步骤"><a href="#AQL抽样检验的方法和步骤" class="headerlink" title="AQL抽样检验的方法和步骤"></a>AQL抽样检验的方法和步骤</h3><p>1、决定检验方案（检验水平、抽样方案、严格程度和AQL值）。检验方案一般由客户决定，也有客户和供应商协商决定的。<br>2、根据检验方案查找样本量字码。<br>3、抽样方案。在AQL中给出了一系列的抽样方案表格，这些表格给出了在不同的品质水平下抽样检验的样本数和接收数（Ac）、拒收数（Re）。<br>4、产品检验。从所要检验的产品中，按照以上所述的样本数，随机抽取样品。在检验中应保证100％地检验所抽取的样本，既使在检验若干件后，发现不合格数已经超过拒收数，仍然应该继续检验剩余的样本，因为检验的目的除了要知道“接受”或“拒收”的结果外，还需要了解货物究竟处于何种质量水平，并且可以通过积累历史数据来判断供应商是否合格和决定以后对供应商的检验方案。对供应商来说，也可以清楚如何去改善产品的品质。<br>5、统计不合格数。<br>6、判定是否接受。对照抽样方案表格中的接收数和拒收数来决定是“接受”还是“拒收”。</p><p>例一：<br>检验方案为一般检验水平Ⅱ、正常检验一次抽样方案、AQL 2.5。<br>如有一批衣服的数量为5000件，则找到对应的“样本量字码”为“L”。<br>在“正常检验一次抽样方案（主表）”中找到样本量字码L，对应的样本量为“200”，表示要抽查200件衣服；AQL 2.5对应的“接收/拒收数”为“10 11”，表示抽查的200件样本中，如果发现的不合格品小于或等于10件的话，则该批产品可接受；如果不合格品等于或大于11的话，则该批产品不可接受。</p><p>例二：<br>检验方案为一般检验水平Ⅱ、正常检验二次抽样方案、AQL 4.0。<br>如有一批衣服的数量为20000件，则找到对应的样本量字码为“M”。<br>从“正常检验二次抽样方案（主表）”中查找到对应的样本量和接收/拒收数。<br>第一次抽样200件，接收/拒收数为“11 16”，不合格品数小于或等于11则接受，不合格品数等于或大于16则拒收，不合格品数为12~15之间则进行第二次抽查；<br>第二次再抽查200件，接收/拒收数为“26 27”，累计不合格品数（加上第一次抽查发现的不合格品数）小于或等于26则接受，累计不合格品数等于或大于27则拒收。</p>]]></content>
    
    
    <summary type="html">AQL-接收质量限制（Acceptance Quality Limit）</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="AQL" scheme="https://jonty.top/tags/AQL/"/>
    
  </entry>
  
  <entry>
    <title>【Blazor-01】-什么是Blazor?</title>
    <link href="https://jonty.top/2023/02/15/what-is-blazor/"/>
    <id>https://jonty.top/2023/02/15/what-is-blazor/</id>
    <published>2023-02-14T23:59:05.000Z</published>
    <updated>2023-03-23T02:20:23.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现如今如何开发Web应用程序"><a href="#现如今如何开发Web应用程序" class="headerlink" title="现如今如何开发Web应用程序"></a>现如今如何开发Web应用程序</h2><p><img data-src="https://cdn.jonty.top/img/whatisblazor.png" alt="img"></p><ul><li>对于服务端开发，我们使用C#、Java、PHP等编程语言，这些都是服务端编程语言。</li><li>对于客户端开发，使用 Angular、React、Vue 等<strong>JavaScript</strong>框架，这些JavaScript框架也是最近几年开始主导客户端开发。</li></ul><p>作为开发人员，为了在业务中持续保持竞争力，我们不可避免的要同时学习服务端编程语言和客户端编程语言。但问题是，我们为什么要学习和使用两套不同的编程语言和框架呢？</p><h2 id="使用C-同时进行服务端和客户端开发"><a href="#使用C-同时进行服务端和客户端开发" class="headerlink" title="使用C#同时进行服务端和客户端开发"></a>使用C#同时进行服务端和客户端开发</h2><p><img data-src="https://cdn.jonty.top/img/whyshouldweuseblazor.png" alt="我们为什么要使用 blazor"></p><p>可以使用C#同时进行服务端和客户端开发吗？答案是可以的，借助<strong>Blazor</strong>,我们可以使用C#而不是JavaScript构建交互式的Web UI。C#代码可以在服务器和客户端浏览器上执行。这意味着.Net开发人员可以重用他们的C#技能，而不是学习新的JavaScript框架而带来的巨大的学习成本。</p><h2 id="浏览器如何执行C-代码"><a href="#浏览器如何执行C-代码" class="headerlink" title="浏览器如何执行C#代码"></a>浏览器如何执行C#代码</h2><p>众所周知，浏览器只能执行JavaScript代码。那么如何在客户端浏览器执行C#代码？答案是<strong>WebAssembly</strong></p><p><img data-src="https://cdn.jonty.top/img/blazorandwebassembly.png" alt="blazor 和 webassembly"></p><p>Blazor 可以使用 WebAssembly 在浏览器中直接运行 C# 代码。它与 Angular、React、Vue 等 JavaScript 框架在同一个安全沙箱中运行。</p><p>事实上，不仅仅是 C#，我们可以使用 WebAssembly 在浏览器中运行任何类型的代码。</p><p>WebAssembly 基于开放的 Web 标准。所以它是所有现代浏览器的原生部分，包括移动浏览器。这意味着要是Blazor应用程序正常工作，不需要安装任何插件。</p><h2 id="Blazor托管模型"><a href="#Blazor托管模型" class="headerlink" title="Blazor托管模型"></a>Blazor托管模型</h2><p>Blazor 提供 2 种托管模型。</p><ul><li> Blazor WebAssembly</li><li> Blazor Server</li></ul><p><img data-src="https://cdn.jonty.top/img/image-20220411220906408.png" alt="image-20220411220906408"></p><h3 id="Blazor-WebAssembly"><a href="#Blazor-WebAssembly" class="headerlink" title="Blazor WebAssembly"></a>Blazor WebAssembly</h3><p>客户端托管模型：应用程序直接在 WebAssembly 的浏览器中运行。</p><p>因此，应用程序所需的一切，即编译后的应用程序代码本身、它的依赖项和 .NET 运行时都下载到浏览器。</p><blockquote><p> 使用 <code>Blazor WebAssembly App </code>模板来创建具有客户端托管模型的 Blazor 应用程序。</p></blockquote><h3 id="Blazor-server"><a href="#Blazor-server" class="headerlink" title="Blazor server"></a>Blazor server</h3><p>服务器托管模型：应用程序在 ASP.NET Core 应用程序内的服务器上执行。</p><p>在客户端和服务器之间，建立了 <strong>SignalR</strong> 连接。</p><p>例如，当客户端上发生事件（例如单击按钮）时，有关事件的信息将通过 SignalR 连接发送到服务器。服务器处理事件并为生成的 HTML 计算差异。整个 HTML 不会再次发送回客户端，它只是通过已建立的 SignalR 连接发送给客户端的差异。然后浏览器更新 UI。Blazor 采用单页面应用程序体系结构。</p><blockquote><p>使用 Blazor Server应用程序模板来创建具有服务器托管模型的 Blazor 应用程序</p></blockquote><h2 id="Blazor开发环境"><a href="#Blazor开发环境" class="headerlink" title="Blazor开发环境"></a>Blazor开发环境</h2><p><a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0">安装.NET6或更高版本</a></p><p>验证本地安装的.NET SDK</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --list-sdks</span><br></pre></td></tr></table></figure><p>可以使用Visual Studio、Visual Studio Code 或 .NET Core CLI 构建 Blazor 应用程序。 </p><p><a href="https://visualstudio.microsoft.com/zh-hans/?rr=https://www.microsoft.com/zh-cn">下载Visual Studio</a></p><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><p><img data-src="https://cdn.jonty.top/img/image-20220411220940383.png" alt="image-20220411220940383"></p>]]></content>
    
    
    <summary type="html">Blazor系列翻译01-什么是Blazor?</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>Blazor系列文章目录</title>
    <link href="https://jonty.top/2023/02/15/blazor-server-basic-tutorial/"/>
    <id>https://jonty.top/2023/02/15/blazor-server-basic-tutorial/</id>
    <published>2023-02-14T23:03:05.000Z</published>
    <updated>2023-06-09T05:57:01.434Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>Blazor可以直接在浏览器中运行C#代码，使用WebAssembly。它和Angular、React、Vue等JavaScript框架一样，在相同的安全沙盒中运行。不仅仅是C#，我们可以使用WebAssembly在浏览器中运行任何类型的代码。</p><p>WebAssembly是基于开放的Web标准。所以它是所有现代浏览器包括移动浏览器的原生部分。这意味着blazor应用程序的工作，不需要像<code>silverlight</code>和<code>flash</code>时代那样安装任何特殊的插件。</p></div><h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="/2023/02/15/what-is-blazor/" title="Blazor 简介">Blazor 简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/03/23/blazor-hosting-models/" title="Blazor 托管模型">Blazor 托管模型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/03/23/blazor-project-structure/" title="Blazor 项目结构">Blazor 项目结构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/03/23/razor-components/" title="Blazor Razor 组件">Blazor Razor 组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/04/26/split-razor-component/" title="Blazor 拆分组件">Blazor 拆分组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/04/26/blazor-model-classes/" title="Blazor 模型类">Blazor 模型类</a></li><li><input checked="" disabled="" type="checkbox"> <a href="/2023/04/26/blazor-component/" title="员工列表组件">员工列表组件</a></li><li><input disabled="" type="checkbox"> Blazor 加载指示器</li><li><input disabled="" type="checkbox"> Blazor 数据访问策略</li><li><input disabled="" type="checkbox"> 什么是 RESTful API</li><li><input disabled="" type="checkbox"> 创建 REST API</li><li><input disabled="" type="checkbox"> REST API 数据库上下文</li><li><input disabled="" type="checkbox"> REST API 中的存储库模式</li><li><input disabled="" type="checkbox"> REST API 获取列表</li><li><input disabled="" type="checkbox"> REST API 通过 ID 获取</li><li><input disabled="" type="checkbox"> 在 REST API 中发布</li><li><input disabled="" type="checkbox"> REST API 模型验证</li><li><input disabled="" type="checkbox"> 使用 REST API</li><li><input disabled="" type="checkbox"> 在 REST API 中删除</li><li><input disabled="" type="checkbox"> 在 REST API 中搜索</li><li><input disabled="" type="checkbox"> 从 Blazor 调用 REST API</li><li><input disabled="" type="checkbox"> Blazor 路由参数</li><li><input disabled="" type="checkbox"> 来自多个表的数据</li><li><input disabled="" type="checkbox"> Blazor 事件处理</li><li><input disabled="" type="checkbox"> Blazor 数据绑定</li><li><input disabled="" type="checkbox"> Blazor 双向绑定</li><li><input disabled="" type="checkbox"> 组件参数</li><li><input disabled="" type="checkbox"> Blazor 事件回调</li><li><input disabled="" type="checkbox"> 构建 Blazor 表单</li><li><input disabled="" type="checkbox"> Blazor 选择列表</li><li><input disabled="" type="checkbox"> 自定义输入组件</li><li><input disabled="" type="checkbox"> RCL 项目</li><li><input disabled="" type="checkbox"> 将枚举绑定到选择</li><li><input disabled="" type="checkbox"> Blazor 日期选择器</li><li><input disabled="" type="checkbox"> Blazor 表单验证</li><li><input disabled="" type="checkbox"> 自定义表单验证</li><li><input disabled="" type="checkbox"> 比较验证</li><li><input disabled="" type="checkbox"> 复杂模型验证</li><li><input disabled="" type="checkbox"> ASP.NET Core 中的 AutoMapper</li><li><input disabled="" type="checkbox"> 编辑和更新</li><li><input disabled="" type="checkbox"> 创建操作</li><li><input disabled="" type="checkbox"> 强制重新加载组件</li><li><input disabled="" type="checkbox"> 删除操作</li><li><input disabled="" type="checkbox"> 组件通信</li><li><input disabled="" type="checkbox"> 删除确认</li><li><input disabled="" type="checkbox"> 属性溅射</li><li><input disabled="" type="checkbox"> 任意属性</li><li><input disabled="" type="checkbox"> 级联值</li><li><input disabled="" type="checkbox"> 多个级联参数</li><li><input disabled="" type="checkbox"> 级联值性能</li><li><input disabled="" type="checkbox"> Blazor 中的身份设置</li><li><input disabled="" type="checkbox"> Cookie 身份验证</li><li><input disabled="" type="checkbox"> 身份验证 - 登录页面</li><li><input disabled="" type="checkbox"> 身份验证 - 注销页面</li><li><input disabled="" type="checkbox"> Blazor 中的授权</li><li><input disabled="" type="checkbox"> Blazor 授权属性</li><li><input disabled="" type="checkbox"> 代码中的 Blazor 授权</li></ul>]]></content>
    
    
    <summary type="html">Blazor系列文章目录</summary>
    
    
    
    <category term="搬砖那些事儿" scheme="https://jonty.top/categories/%E6%90%AC%E7%A0%96%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    
    
    <category term="ASP.NET Core" scheme="https://jonty.top/tags/ASP-NET-Core/"/>
    
    <category term="Blazor" scheme="https://jonty.top/tags/Blazor/"/>
    
  </entry>
  
  <entry>
    <title>Redis高可用集群部署-Cluster</title>
    <link href="https://jonty.top/2023/02/03/docker-swarm-redis-cluster/"/>
    <id>https://jonty.top/2023/02/03/docker-swarm-redis-cluster/</id>
    <published>2023-02-03T15:08:58.000Z</published>
    <updated>2023-02-03T15:10:18.760Z</updated>
    
    <content type="html"><![CDATA[<p>Redis cluster是redis的官方集群方案，但是要求客户端自己做重定向，所以连接单机redis和集群redis的客户端会有些不同，连接集群版redis的时候要客户端连接6个redis实例。</p><p>官方为了屏蔽这种差异，做了一个redis-cluster-proxy，经过这个proxy的代理后，连接redis集群就和连接单机redis一样了。</p><blockquote><p><a href="https://github.com/RedisLabs/redis-cluster-proxy">RedisLabs/redis-cluster-proxy: A proxy for Redis clusters. (github.com)</a></p></blockquote><p><img data-src="https://cdn.jonty.top/img/image-20230203142147518.png" alt="image-20230203142147518"></p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><h3 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h3><p>搭建3master+3slave+1proxy，共三个节点，如下：</p><table><thead><tr><th>IP</th><th>hostname</th><th>部署实例</th></tr></thead><tbody><tr><td>192.168.2.213</td><td>manager</td><td>redis1、redis2、proxy(1实例)</td></tr><tr><td>192.168.2.214</td><td>worker1</td><td>redis3、redis4</td></tr><tr><td>192.168.2.215</td><td>worker2</td><td>redis5、redis5</td></tr></tbody></table><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@manager ~]<span class="comment"># uname -a</span></span><br><span class="line">Linux manager 3.10.0-957.el7.x86_64 <span class="comment">#1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[root@manager ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.6.1810 (Core) </span><br></pre></td></tr></table></figure><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>查看Docker版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@manager ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.23</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.18.10</span><br><span class="line"> Git commit:        7155243</span><br><span class="line"> Built:             Thu Jan 19 17:36:21 2023</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.23</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.18.10</span><br><span class="line">  Git commit:       6051f14</span><br><span class="line">  Built:            Thu Jan 19 17:34:26 2023</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.15</span><br><span class="line">  GitCommit:        5b842e528e99d4d4c1686467debf2bd4b88ecd86</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.4</span><br><span class="line">  GitCommit:        v1.1.4-0-g5fd4c4d</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>所有节点执行以下命令，打开集群初始化所需端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有node</span></span><br><span class="line">firewall-cmd --zone=public --add-port=2377/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=7946/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=7946/udp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=4789/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=4789/udp --permanent</span><br></pre></td></tr></table></figure><p>重启防火墙以及Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有node</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="Docker-Swarm"><a href="#Docker-Swarm" class="headerlink" title="Docker Swarm"></a>Docker Swarm</h3><p>创建3个manager节点，如下：</p><p><img data-src="https://cdn.jonty.top/img/image-20230203101937613.png" alt="image-20230203101937613"></p><p>manager节点初始化集群：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm init --advertise-addr 192.168.2.213</span><br></pre></td></tr></table></figure><p>manager节点获取加入manager token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm join-token manager</span><br></pre></td></tr></table></figure><p>worker节点以<code>manager</code>身份加入集群</p><pre><code>docker swarm join \--token SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2 \192.168.2.213:2377</code></pre><h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><img data-src="https://cdn.jonty.top/img/2020-12-02-150023.jpg" alt="redis_cluster" style="zoom: 33%;" /><h3 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h3><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir redis-cluster</span><br><span class="line"><span class="built_in">cd</span> redis-cluster</span><br></pre></td></tr></table></figure><h4 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h4><p>编写<code>docker-compose.yml</code>文件，需要根据实际IP地址做调整</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p>docker-compose.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  redis-node1:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node1</span><br><span class="line">    ports:</span><br><span class="line">      - 7001:6379</span><br><span class="line">      - 17001:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node1-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;redis-server&quot;</span></span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.213&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7001&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17001&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == manager</span><br><span class="line"></span><br><span class="line">  redis-node2:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node2</span><br><span class="line">    ports:</span><br><span class="line">      - 7002:6379</span><br><span class="line">      - 17002:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node2-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;redis-server&quot;</span></span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.213&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7002&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17002&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == manager</span><br><span class="line"></span><br><span class="line">  redis-node3:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node3</span><br><span class="line">    ports:</span><br><span class="line">      - 7003:6379</span><br><span class="line">      - 17003:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node3-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;redis-server&quot;</span></span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.214&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7003&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17003&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == worker1</span><br><span class="line"></span><br><span class="line">  redis-node4:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node4</span><br><span class="line">    ports:</span><br><span class="line">      - 7004:6379</span><br><span class="line">      - 17004:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node4-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.214&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7004&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17004&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == worker1</span><br><span class="line"></span><br><span class="line">  redis-node5:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node5</span><br><span class="line">    ports:</span><br><span class="line">      - 7005:6379</span><br><span class="line">      - 17005:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node5-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.215&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7005&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17005&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == worker2</span><br><span class="line"></span><br><span class="line">  redis-node6:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-node6</span><br><span class="line">    ports:</span><br><span class="line">      - 7006:6379</span><br><span class="line">      - 17006:16379</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;redis-node6-data:/data&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: </span><br><span class="line">      - <span class="string">&quot;--appendonly yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-enabled yes&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-config-file nodes.conf&quot;</span></span><br><span class="line">      - <span class="string">&quot;--requirepass bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--masterauth bb123456&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-ip 192.168.2.215&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-port 7006&quot;</span></span><br><span class="line">      - <span class="string">&quot;--cluster-announce-bus-port 17006&quot;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == worker2</span><br><span class="line"></span><br><span class="line">  redis-cluster:</span><br><span class="line">    image: redis:6.2.4</span><br><span class="line">    hostname: redis-cluster</span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    depends_on:</span><br><span class="line">      - redis-node1</span><br><span class="line">      - redis-node2</span><br><span class="line">      - redis-node3</span><br><span class="line">      - redis-node4</span><br><span class="line">      - redis-node5</span><br><span class="line">      - redis-node6</span><br><span class="line">    <span class="built_in">command</span>: <span class="string">&#x27;redis-cli --cluster create</span></span><br><span class="line"><span class="string">    192.168.2.213:7001 192.168.2.213:7002 192.168.2.214:7003</span></span><br><span class="line"><span class="string">    192.168.2.214:7004 192.168.2.215:7005 192.168.2.215:7006</span></span><br><span class="line"><span class="string">    --cluster-yes --cluster-replicas 1 -a bb123456&#x27;</span></span><br><span class="line">    deploy:</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">        delay: 5s</span><br><span class="line">        max_attempts: 5</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.hostname == manager</span><br><span class="line"></span><br><span class="line">  redis-proxy:</span><br><span class="line">    image: jontymax/redis-cluster-proxy:dev</span><br><span class="line">    hostname: redis-proxy</span><br><span class="line">    ports: </span><br><span class="line">      - <span class="string">&quot;7777:7777&quot;</span></span><br><span class="line">    networks:</span><br><span class="line">      - redis-swarm</span><br><span class="line">    depends_on:</span><br><span class="line">      - redis-cluster</span><br><span class="line">    <span class="built_in">command</span>: <span class="string">&#x27;redis-cluster-proxy --auth bb123456 192.168.2.213:7001 192.168.2.213:7002 192.168.2.214:7003 192.168.2.214:7004 192.168.2.215:7005 192.168.2.215:7006&#x27;</span></span><br><span class="line">    deploy:</span><br><span class="line">      mode: global</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  redis-swarm:</span><br><span class="line">    driver: overlay</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  redis-node1-data:</span><br><span class="line">  redis-node2-data:</span><br><span class="line">  redis-node3-data:</span><br><span class="line">  redis-node4-data:</span><br><span class="line">  redis-node5-data:</span><br><span class="line">  redis-node6-data:</span><br></pre></td></tr></table></figure><h3 id="服务部署"><a href="#服务部署" class="headerlink" title="服务部署"></a>服务部署</h3><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stack deploy -c docker-compose.yml redis-cluster-proxy</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230203145125983.png" alt="image-20230203145125983"></p><h4 id="查看服务"><a href="#查看服务" class="headerlink" title="查看服务"></a>查看服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker service ls | grep redis-cluster</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230203145230510.png" alt="image-20230203145230510"></p><p>redis-cluster服务用于初始化集群，启动完成日志如下:</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 192.168.2.214:7004 to 192.168.2.213:7001</span><br><span class="line">Adding replica 192.168.2.215:7006 to 192.168.2.214:7003</span><br><span class="line">Adding replica 192.168.2.213:7002 to 192.168.2.215:7005</span><br><span class="line">M: 9ee907ba218b782c264be77e4dd5ca53a79b7350 192.168.2.213:7001</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">S: 567cbca6ba03a2c4d1f4461882cf64a369daaafb 192.168.2.213:7002</span><br><span class="line">   replicates 98719ee5734cdc8b9b06519e2ebcf23b66041266</span><br><span class="line">M: c912e5bc90cdaed6159a5ca83725848556a8e68d 192.168.2.214:7003</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">S: 257d31f2f29f658103e9032584de8c2803bfb7b9 192.168.2.214:7004</span><br><span class="line">   replicates 9ee907ba218b782c264be77e4dd5ca53a79b7350</span><br><span class="line">M: 98719ee5734cdc8b9b06519e2ebcf23b66041266 192.168.2.215:7005</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: de5dbc1a51252d1c2ccf863470a85e5bd9e168bd 192.168.2.215:7006</span><br><span class="line">   replicates c912e5bc90cdaed6159a5ca83725848556a8e68d</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join</span><br><span class="line">......</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.2.213:7001)</span><br><span class="line">M: 9ee907ba218b782c264be77e4dd5ca53a79b7350 192.168.2.213:7001</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: c912e5bc90cdaed6159a5ca83725848556a8e68d 192.168.2.214:7003</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 567cbca6ba03a2c4d1f4461882cf64a369daaafb 192.168.2.213:7002</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 98719ee5734cdc8b9b06519e2ebcf23b66041266</span><br><span class="line">S: 257d31f2f29f658103e9032584de8c2803bfb7b9 192.168.2.214:7004</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 9ee907ba218b782c264be77e4dd5ca53a79b7350</span><br><span class="line">S: de5dbc1a51252d1c2ccf863470a85e5bd9e168bd 192.168.2.215:7006</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates c912e5bc90cdaed6159a5ca83725848556a8e68d</span><br><span class="line">M: 98719ee5734cdc8b9b06519e2ebcf23b66041266 192.168.2.215:7005</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure><p>redis-proxy服务用于代理redis-cluster，等待redis-cluster初始化完成，启动完成日志如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[2023-02-03 06:28:08.955/M] Redis Cluster Proxy v999.999.999 (unstable)</span><br><span class="line">[2023-02-03 06:28:08.955/M] Commit: (ac83840d/0)</span><br><span class="line">[2023-02-03 06:28:08.955/M] Git Branch: unstable</span><br><span class="line">[2023-02-03 06:28:08.955/M] PID: 1</span><br><span class="line">[2023-02-03 06:28:08.955/M] OS: Linux 3.10.0-957.el7.x86<span class="built_in">_</span>64 x86<span class="built_in">_</span>64</span><br><span class="line">[2023-02-03 06:28:08.955/M] Bits: 64</span><br><span class="line">[2023-02-03 06:28:08.955/M] Log level: info</span><br><span class="line">[2023-02-03 06:28:08.955/M] Connections pool size: 10 (respawn 2 every 50ms if below 10)</span><br><span class="line">[2023-02-03 06:28:08.955/M] The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="line">[2023-02-03 06:28:08.955/M] Listening on *:7777</span><br><span class="line">[2023-02-03 06:28:08.955/M] Starting 8 threads...</span><br><span class="line">[2023-02-03 06:28:08.955/M] Fetching cluster configuration...</span><br><span class="line">[2023-02-03 06:28:08.962/M] Cluster Address: 192.168.2.213:7001</span><br><span class="line">[2023-02-03 06:28:08.962/M] Cluster has 3 masters and 3 replica(s)</span><br><span class="line">[2023-02-03 06:28:09.057/M] All thread(s) started!</span><br></pre></td></tr></table></figure><blockquote><p>如果初始化或代理启动失败，可以尝试移除服务重新创建</p></blockquote><h4 id="移除服务"><a href="#移除服务" class="headerlink" title="移除服务"></a>移除服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stack rm redis-cluster</span><br></pre></td></tr></table></figure><h2 id="服务连接"><a href="#服务连接" class="headerlink" title="服务连接"></a>服务连接</h2><h3 id="连接到集群"><a href="#连接到集群" class="headerlink" title="连接到集群"></a>连接到集群</h3><p>连接任意节点<code>IP:700x</code>可连接到集群</p><p><img data-src="https://cdn.jonty.top/img/image-20230203145831336.png" alt="image-20230203145831336"></p><p>可正常使用</p><p><img data-src="https://cdn.jonty.top/img/image-20230203150113829.png" alt="image-20230203150113829"></p><p>查看集群节点信息</p><p><img data-src="https://cdn.jonty.top/img/image-20230203150222570.png" alt="image-20230203150222570"></p><h3 id="连接到代理"><a href="#连接到代理" class="headerlink" title="连接到代理"></a>连接到代理</h3><p><img data-src="https://cdn.jonty.top/img/image-20230203145814034.png" alt="image-20230203145814034"></p><p><img data-src="https://cdn.jonty.top/img/image-20230203150312909.png" alt="image-20230203150312909"></p>]]></content>
    
    
    <summary type="html">Docker Swarm部署Redis-Cluster+Proxy实现容灾</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Docker" scheme="https://jonty.top/tags/Docker/"/>
    
    <category term="Docker Swarm" scheme="https://jonty.top/tags/Docker-Swarm/"/>
    
    <category term="Redis" scheme="https://jonty.top/tags/Redis/"/>
    
    <category term="Redis Cluster" scheme="https://jonty.top/tags/Redis-Cluster/"/>
    
  </entry>
  
  <entry>
    <title>Redis高可用集群部署-Sentinel</title>
    <link href="https://jonty.top/2023/02/03/docker-swarm-redis-sentinel/"/>
    <id>https://jonty.top/2023/02/03/docker-swarm-redis-sentinel/</id>
    <published>2023-02-03T15:05:03.000Z</published>
    <updated>2023-02-03T15:08:43.556Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://cdn.jonty.top/img/redis-sentinel-haproxy.png" alt="redis-sentinel-haproxy"></p><p>Redis使用使用<strong>哨兵模式</strong>进行组网，哨兵负责主节点的故障转移。<br>HAProxy作为Redis集群的代理(HAProxy工作在TCP层)，屏蔽底层redis的组网细节，对上层应用来看就是单节点的redis。</p><blockquote><p>关于<a href="https://mp.weixin.qq.com/s?__biz=MzI3MjY1ODI2Ng==&mid=2247486094&idx=1&sn=f727b9fe6f53f4ebc5280dd09d6161ed&chksm=eb2e70bbdc59f9ad8157859f0c6eb5fa881c9e147d7e03ca9693633f7d2bff7215d0f813c847&scene=27">Redis集群方案介绍+优缺点对比</a></p></blockquote><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><h3 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h3><p>搭建1主2从3哨兵，共三个节点，如下：</p><table><thead><tr><th>IP</th><th>hostname</th><th>部署实例</th></tr></thead><tbody><tr><td>192.168.2.213</td><td>manager</td><td>redis1、sentinel1、Haproxy(1实例)</td></tr><tr><td>192.168.2.214</td><td>worker1</td><td>redis2、sentinel2</td></tr><tr><td>192.168.2.215</td><td>worker2</td><td>redis3、sentinel3</td></tr></tbody></table><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@manager ~]<span class="comment"># uname -a</span></span><br><span class="line">Linux manager 3.10.0-957.el7.x86_64 <span class="comment">#1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[root@manager ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.6.1810 (Core)</span><br></pre></td></tr></table></figure><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>查看Docker版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@manager ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.23</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.18.10</span><br><span class="line"> Git commit:        7155243</span><br><span class="line"> Built:             Thu Jan 19 17:36:21 2023</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.23</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.18.10</span><br><span class="line">  Git commit:       6051f14</span><br><span class="line">  Built:            Thu Jan 19 17:34:26 2023</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.15</span><br><span class="line">  GitCommit:        5b842e528e99d4d4c1686467debf2bd4b88ecd86</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.4</span><br><span class="line">  GitCommit:        v1.1.4-0-g5fd4c4d</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>所有节点执行以下命令，打开集群初始化所需端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有node</span></span><br><span class="line">firewall-cmd --zone=public --add-port=2377/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=7946/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=7946/udp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=4789/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=4789/udp --permanent</span><br></pre></td></tr></table></figure><p>重启防火墙以及Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有node</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="Docker-Swarm"><a href="#Docker-Swarm" class="headerlink" title="Docker Swarm"></a>Docker Swarm</h3><p>创建3个manager节点，如下：</p><p><img data-src="https://cdn.jonty.top/img/image-20230203101937613.png" alt="image-20230203101937613"></p><p>manager节点初始化集群：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm init --advertise-addr 192.168.2.213</span><br></pre></td></tr></table></figure><p>manager节点获取加入manager token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm join-token manager</span><br></pre></td></tr></table></figure><p>worker节点以<code>manager</code>身份加入集群</p><pre><code>docker swarm join \--token SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2 \192.168.2.213:2377</code></pre><h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><h3 id="部署架构图"><a href="#部署架构图" class="headerlink" title="部署架构图"></a>部署架构图</h3><p><img data-src="https://cdn.jonty.top/img/image-20230203103602363.png" alt="redis-sentinel"></p><h3 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h3><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir redis-sentinel</span><br><span class="line"><span class="built_in">cd</span> redis-sentinel</span><br><span class="line">mkdir haproxy</span><br></pre></td></tr></table></figure><h4 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h4><p>编写<code>docker-compose.yml</code>文件，需要根据实际IP地址做调整</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p>docker-compose.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="comment"># cpus: &#x27;0.001&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">5120M</span></span><br><span class="line">        <span class="attr">reservations:</span></span><br><span class="line">          <span class="comment"># cpus: &#x27;0.001&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">512M</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">manager</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/redis.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 6379&#x27; &gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;bind 0.0.0.0&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-ip 192.168.2.213&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-port 6379&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;masterauth bb123456&#x27; &gt;&gt; /conf/redis.conf;</span></span><br><span class="line"><span class="string">      echo &#x27;requirepass bb123456&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;appendonly yes&#x27; &gt;&gt; /conf/redis.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/redis.conf&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">redis2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">worker1</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/redis.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 6379&#x27; &gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;bind 0.0.0.0&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-ip 192.168.2.214&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-port 6379&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;masterauth bb123456&#x27; &gt;&gt; /conf/redis.conf;</span></span><br><span class="line"><span class="string">      echo &#x27;requirepass bb123456&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;replicaof 192.168.2.213 6379&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;appendonly yes&#x27; &gt;&gt; /conf/redis.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/redis.conf&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">redis3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">worker2</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/redis.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 6379&#x27; &gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;bind 0.0.0.0&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-ip 192.168.2.215&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;slave-announce-port 6379&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;masterauth bb123456&#x27; &gt;&gt; /conf/redis.conf;</span></span><br><span class="line"><span class="string">      echo &#x27;requirepass bb123456&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;replicaof 192.168.2.213 6379&#x27; &gt;&gt; /conf/redis.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;appendonly yes&#x27; &gt;&gt; /conf/redis.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/redis.conf&quot;</span></span><br><span class="line"><span class="string"></span>      </span><br><span class="line">  <span class="attr">sentinel1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">manager</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/sentinel.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 26379&#x27; &gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel announce-ip 192.168.2.213&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel monitor mymaster 192.168.2.213 6379 2&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel auth-pass mymaster bb123456&#x27; &gt;&gt; /conf/sentinel.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/sentinel.conf --sentinel&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">sentinel2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">worker1</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/sentinel.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 26379&#x27; &gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel announce-ip 192.168.2.214&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel monitor mymaster 192.168.2.213 6379 2&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel auth-pass mymaster bb123456&#x27; &gt;&gt; /conf/sentinel.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/sentinel.conf --sentinel&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">sentinel3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">26379</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">tcp</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-conf:/conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">worker2</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      bash -c &quot;if [ ! -f /conf/sentinel.conf ];then</span></span><br><span class="line"><span class="string">      echo &#x27;port 26379&#x27; &gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel announce-ip 192.168.2.215&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel monitor mymaster 192.168.2.213 6379 2&#x27; &gt;&gt; /conf/sentinel.conf ;</span></span><br><span class="line"><span class="string">      echo &#x27;sentinel auth-pass mymaster bb123456&#x27; &gt;&gt; /conf/sentinel.conf ; fi &amp;&amp;</span></span><br><span class="line"><span class="string">      redis-server /conf/sentinel.conf --sentinel&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">haproxy:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">haproxytech/haproxy-alpine:2.4</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sentinel1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sentinel2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sentinel3</span></span><br><span class="line">    <span class="attr">configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">haproxy_conf</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/usr/local/etc/haproxy/haproxy.cfg</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-sentinel</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;16379:16379&quot;</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">global</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">redis-sentinel:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">overlay</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">redis-data:</span></span><br><span class="line">  <span class="attr">redis-conf:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">haproxy_conf:</span></span><br><span class="line">    <span class="attr">file:</span> <span class="string">./haproxy/haproxy.cfg</span></span><br></pre></td></tr></table></figure><h4 id="haproxy-cfg"><a href="#haproxy-cfg" class="headerlink" title="haproxy.cfg"></a>haproxy.cfg</h4><p>创建<code>haproxy.cfg</code>配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Global settings</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line"><span class="attribute">global</span></span><br><span class="line">    <span class="comment"># to have these messages end up in /var/log/haproxy.log you will</span></span><br><span class="line">    <span class="comment"># need to:</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 1) configure syslog to accept network log events.  This is done</span></span><br><span class="line">    <span class="comment">#    by adding the &#x27;-r&#x27; option to the SYSLOGD_OPTIONS in</span></span><br><span class="line">    <span class="comment">#    /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 2) configure local2 events to go to the /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment">#   file. A line like the following can be added to</span></span><br><span class="line">    <span class="comment">#   /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#    local2.*                       /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment"># </span></span><br><span class="line">  log stdout format raw local0 <span class="literal">info</span>  </span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># common defaults that all the &#x27;listen&#x27; and &#x27;backend&#x27; sections will</span></span><br><span class="line"><span class="comment"># use if not designated in their block</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line">defaults</span><br><span class="line">    log global</span><br><span class="line">    mode tcp</span><br><span class="line">    retries <span class="number">3</span></span><br><span class="line">    option redispatch</span><br><span class="line">    maxconn <span class="number">20000</span></span><br><span class="line">    timeout connect <span class="number">600s</span></span><br><span class="line">    timeout client <span class="number">600s</span></span><br><span class="line">    timeout server <span class="number">600s</span></span><br><span class="line">listen stats</span><br><span class="line">    bind <span class="number">0.0.0.0:8080</span> <span class="comment"># 面板代理</span></span><br><span class="line">    mode http </span><br><span class="line">    stats uri /haproxy-status <span class="comment"># 面板地址</span></span><br><span class="line">    stats auth admin:admin <span class="comment"># 面板user:pwd</span></span><br><span class="line">    stats hide-version</span><br><span class="line">    stats refresh <span class="number">30s</span></span><br><span class="line">frontend redis16379 </span><br><span class="line">    bind :<span class="number">16379</span> <span class="comment"># 代理端口</span></span><br><span class="line">    default_backend redis_16379_backend</span><br><span class="line">backend redis_16379_backend</span><br><span class="line">    option tcp-check</span><br><span class="line">    tcp-check connect</span><br><span class="line">    tcp-check send AUTH\ bb123456\r\n <span class="comment"># redis 密码 按需调整</span></span><br><span class="line">    tcp-check expect string +OK</span><br><span class="line">    tcp-check send PING\r\n</span><br><span class="line">    tcp-check expect string +PONG</span><br><span class="line">    tcp-check send <span class="literal">info</span>\ replication\r\n</span><br><span class="line">    tcp-check expect string role:master <span class="comment"># 轮询 master节点</span></span><br><span class="line">    tcp-check send QUIT\r\n</span><br><span class="line">    tcp-check expect string +OK</span><br><span class="line">    server redis1 <span class="number">192.168.2.213:6379</span> check inter <span class="number">1s</span></span><br><span class="line">    server redis2 <span class="number">192.168.2.214:6379</span> check inter <span class="number">1s</span></span><br><span class="line">    server redis3 <span class="number">192.168.2.215:6379</span> check inter <span class="number">1s</span></span><br></pre></td></tr></table></figure><p>文件目录如下：</p><p><img data-src="https://cdn.jonty.top/img/image-20230203105159275.png" alt="image-20230203105159275"></p><h3 id="服务部署"><a href="#服务部署" class="headerlink" title="服务部署"></a>服务部署</h3><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stack deploy -c docker-compose.yml redis-sentinel</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230203105502431.png" alt="image-20230203105502431"></p><h4 id="查看服务"><a href="#查看服务" class="headerlink" title="查看服务"></a>查看服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker service ls | grep redis-sentinel</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230203105609286.png" alt="image-20230203105609286"></p><p><img data-src="https://cdn.jonty.top/img/image-20230203110439408.png" alt="image-20230203110439408"></p><h5 id="服务日志"><a href="#服务日志" class="headerlink" title="服务日志"></a>服务日志</h5><p>redis:</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1:S 03 Feb 2023 09:07:22.284 * MASTER &lt;-&gt; REPLICA sync: receiving 214 bytes from master to disk</span><br><span class="line">1:S 03 Feb 2023 09:07:22.284 * MASTER &lt;-&gt; REPLICA sync: Flushing old data</span><br><span class="line">1:S 03 Feb 2023 09:07:22.284 * MASTER &lt;-&gt; REPLICA sync: Loading DB in memory</span><br><span class="line">1:S 03 Feb 2023 09:07:22.285 * Loading RDB produced by version 6.2.4</span><br><span class="line">1:S 03 Feb 2023 09:07:22.285 * RDB age 0 seconds</span><br><span class="line">1:S 03 Feb 2023 09:07:22.285 * RDB memory usage when created 1.85 Mb</span><br><span class="line">1:S 03 Feb 2023 09:07:22.285 * MASTER &lt;-&gt; REPLICA sync: Finished with success</span><br><span class="line">1:S 03 Feb 2023 09:07:22.286 * Background append only file rewriting started by pid 13</span><br><span class="line">1:S 03 Feb 2023 09:07:22.308 * AOF rewrite child asks to stop sending diffs.</span><br><span class="line">13:C 03 Feb 2023 09:07:22.308 * Parent agreed to stop sending diffs. Finalizing AOF...</span><br><span class="line">13:C 03 Feb 2023 09:07:22.308 * Concatenating 0.00 MB of AOF diff received from parent.</span><br><span class="line">13:C 03 Feb 2023 09:07:22.309 * SYNC append only file rewrite performed</span><br><span class="line">13:C 03 Feb 2023 09:07:22.309 * AOF rewrite: 4 MB of memory used by copy-on-write</span><br><span class="line">1:S 03 Feb 2023 09:07:22.348 * Background AOF rewrite terminated with success</span><br><span class="line">1:S 03 Feb 2023 09:07:22.348 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)</span><br><span class="line">1:S 03 Feb 2023 09:07:22.348 * Background AOF rewrite finished successfully</span><br><span class="line">1:S 03 Feb 2023 10:07:14.007 * 1 changes in 3600 seconds. Saving...</span><br><span class="line">1:S 03 Feb 2023 10:07:14.009 * Background saving started by pid 15</span><br><span class="line">15:C 03 Feb 2023 10:07:14.012 * DB saved on disk</span><br><span class="line">15:C 03 Feb 2023 10:07:14.013 * RDB: 4 MB of memory used by copy-on-write</span><br><span class="line">1:S 03 Feb 2023 10:07:14.109 * Background saving terminated with success</span><br></pre></td></tr></table></figure><p>sentinel:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1:X 03 Feb 2023 09:07:24.787 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">1:X 03 Feb 2023 09:07:24.787 # Redis version=6.2.4, bits=64, commit=00000000, modified=0, pid=1, just started</span><br><span class="line">1:X 03 Feb 2023 09:07:24.787 # Configuration loaded</span><br><span class="line">1:X 03 Feb 2023 09:07:24.788 * monotonic clock: POSIX clock_gettime</span><br><span class="line">1:X 03 Feb 2023 09:07:24.788 * Running mode=sentinel, port=26379.</span><br><span class="line">1:X 03 Feb 2023 09:07:24.788 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="line">1:X 03 Feb 2023 09:07:24.789 # Sentinel ID is 49d6ef4a1346ec4a05bec6a6387e6fd66c2a177e</span><br><span class="line">1:X 03 Feb 2023 09:07:24.789 # +monitor master mymaster 192.168.2.12 6379 quorum 2</span><br><span class="line">1:X 03 Feb 2023 09:09:48.027 # +sdown sentinel 32c2d1980d2d054c811f474140f17bb60c1a6dde 192.168.2.214 26379 @ mymaster 192.168.2.215 6379</span><br><span class="line">1:X 03 Feb 2023 09:09:48.099 # +sdown slave 192.168.2.214:6379 192.168.2.11 6379 @ mymaster 192.168.2.12 6379</span><br><span class="line">1:X 03 Feb 2023 09:11:54.402 * +reboot slave 192.168.2.214:6379 192.168.2.11 6379 @ mymaster 192.168.2.12 6379</span><br><span class="line">1:X 03 Feb 2023 09:11:54.502 # -sdown slave 192.168.2.214:6379 192.168.2.11 6379 @ mymaster 192.168.2.12 6379</span><br><span class="line">1:X 03 Feb 2023 09:11:54.502 # -sdown sentinel 32c2d1980d2d054c811f474140f17bb60c1a6dde 192.168.2.11 26379 @ mymaster 192.168.2.215 6379</span><br></pre></td></tr></table></figure><p>haproxy:</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[NOTICE]   (1) : New worker <span class="params">#1</span> (8) forked</span><br><span class="line">Connect from 10.0.0.2:3768 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3767 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3769 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Server redis<span class="built_in">_</span>16379<span class="built_in">_</span>backend/redis1 is DOWN, reason: Layer7 timeout, info: &quot; at step 7 of tcp-check (expect string &#x27;role:master&#x27;)&quot;, check duration: 1001ms. 2 active and 0 backup servers left. 2 sessions active, 0 requeued, 0 remaining in queue.</span><br><span class="line">[WARNING]  (8) : Server redis<span class="built_in">_</span>16379<span class="built_in">_</span>backend/redis1 is DOWN, reason: Layer7 timeout, info: &quot; at step 7 of tcp-check (expect string &#x27;role:master&#x27;)&quot;, check duration: 1001ms. 2 active and 0 backup servers left. 2 sessions active, 0 requeued, 0 remaining in queue.</span><br><span class="line">[WARNING]  (8) : Server redis<span class="built_in">_</span>16379<span class="built_in">_</span>backend/redis2 is DOWN, reason: Layer7 timeout, info: &quot; at step 7 of tcp-check (expect string &#x27;role:master&#x27;)&quot;, check duration: 1001ms. 1 active and 0 backup servers left. 1 sessions active, 0 requeued, 0 remaining in queue.</span><br><span class="line">Server redis<span class="built_in">_</span>16379<span class="built_in">_</span>backend/redis2 is DOWN, reason: Layer7 timeout, info: &quot; at step 7 of tcp-check (expect string &#x27;role:master&#x27;)&quot;, check duration: 1001ms. 1 active and 0 backup servers left. 1 sessions active, 0 requeued, 0 remaining in queue.</span><br><span class="line">Connect from 10.0.0.2:3765 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3764 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3770 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3771 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3766 to 10.0.0.249:16379 (redis16379/TCP)</span><br><span class="line">Connect from 10.0.0.2:3772 to 10.0.0.249:16379 (redis16379/TCP)</span><br></pre></td></tr></table></figure><h5 id="代理面板"><a href="#代理面板" class="headerlink" title="代理面板"></a>代理面板</h5><p>访问<code>IP:8080/haproxy-status</code></p><p><img data-src="https://cdn.jonty.top/img/image-20230203112402342.png" alt="image-20230203112402342"></p><h4 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stack rm redis-sentinel</span><br></pre></td></tr></table></figure><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p>使用redis连接工具测试连接</p><h3 id="连接到Redis单实例"><a href="#连接到Redis单实例" class="headerlink" title="连接到Redis单实例"></a>连接到Redis单实例</h3><p>正常连接<code>IP:6379</code>即可</p><p><img data-src="https://cdn.jonty.top/img/image-20230203110812313.png" alt="image-20230203110812313"></p><h3 id="连接到Redis哨兵"><a href="#连接到Redis哨兵" class="headerlink" title="连接到Redis哨兵"></a>连接到Redis哨兵</h3><p>连接到<code>IP:26379</code></p><p><img data-src="https://cdn.jonty.top/img/image-20230203110947077.png" alt="image-20230203110947077"></p><h3 id="连接到Haproxy代理"><a href="#连接到Haproxy代理" class="headerlink" title="连接到Haproxy代理"></a>连接到Haproxy代理</h3><p>连接到<code>haproxy:16379</code>端口</p><p><img data-src="https://cdn.jonty.top/img/image-20230203111030197.png" alt="image-20230203111030197"></p><h3 id="测试数据同步"><a href="#测试数据同步" class="headerlink" title="测试数据同步"></a>测试数据同步</h3><p>通过Haproxy添加新的键值：name:jonty</p><p><img data-src="https://cdn.jonty.top/img/image-20230203111202530.png" alt="image-20230203111202530"></p><p>新增成功</p><p><img data-src="https://cdn.jonty.top/img/image-20230203111313941.png" alt="image-20230203111313941"></p><p>查看哨兵连接：</p><p>可以看到已经同步成功</p><p><img data-src="https://cdn.jonty.top/img/image-20230203111344072.png" alt="image-20230203111344072"></p><p>查看同步日志</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1:S 03 Feb 2023 11:11:55.079 * 1 changes in 3600 seconds. Saving...</span><br><span class="line">1:S 03 Feb 2023 11:11:55.081 * Background saving started by pid 16</span><br><span class="line">16:C 03 Feb 2023 11:11:55.083 * DB saved on disk</span><br><span class="line">16:C 03 Feb 2023 11:11:55.084 * RDB: 4 MB of memory used by copy-on-write</span><br><span class="line">1:S 03 Feb 2023 11:11:55.181 * Background saving terminated with success</span><br></pre></td></tr></table></figure><h2 id="容灾测试"><a href="#容灾测试" class="headerlink" title="容灾测试"></a>容灾测试</h2><p>将214也就是<code>worker1</code>停止服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line">systemctl stop docker.socket</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jonty.top/img/image-20230203111954001.png" alt="image-20230203111954001"></p><p>可以看到<code>worker1</code>节点状态为<code>down</code></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@manager redis-swarm]<span class="params">#</span> docker node ls</span><br><span class="line">ID                            HOSTNAME   STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION</span><br><span class="line">eyufo1vxn0m5xksslcns6gdau *   manager    Ready     Active         Reachable        20.10.23</span><br><span class="line">xki7hv7tw44394vqyhidco14w     worker1    Down      Active         Unreachable      20.10.23</span><br><span class="line">xv4fw7yzwg5iwypea65z9n9yn     worker2    Ready     Active         Leader           20.10.23</span><br></pre></td></tr></table></figure><p>214实例已无法访问</p><p><img data-src="https://cdn.jonty.top/img/image-20230203112527481.png" alt="image-20230203112527481"></p><p><img data-src="https://cdn.jonty.top/img/image-20230203112729076.png" alt="image-20230203112729076"></p><p>连接HaProxy，Redis服务正常</p><p><img data-src="https://cdn.jonty.top/img/image-20230203112443957.png" alt="image-20230203112443957"></p><p>添加新的键值</p><p><img data-src="https://cdn.jonty.top/img/image-20230203112635960.png" alt="image-20230203112635960"></p><p>并重新恢复worker1，查看数据是否同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@worker1 ~]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@worker1 ~]<span class="comment"># systemctl start docker.socket</span></span><br></pre></td></tr></table></figure><p>可以看到<code>redis2</code>服务已经恢复</p><p><img data-src="https://cdn.jonty.top/img/image-20230203112739424.png" alt="image-20230203112739424"></p><p>查看<code>redis2</code>日志，可以看到已经同步成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1:S 03 Feb 2023 11:26:55.825 * MASTER &lt;-&gt; REPLICA sync: Finished with success</span><br><span class="line">1:S 03 Feb 2023 11:26:55.825 * Background append only file rewriting started by pid 13</span><br><span class="line">1:S 03 Feb 2023 11:26:55.850 * AOF rewrite child asks to stop sending diffs.</span><br><span class="line">13:C 03 Feb 2023 11:26:55.850 * Parent agreed to stop sending diffs. Finalizing AOF...</span><br><span class="line">13:C 03 Feb 2023 11:26:55.850 * Concatenating 0.00 MB of AOF diff received from parent.</span><br><span class="line">13:C 03 Feb 2023 11:26:55.850 * SYNC append only file rewrite performed</span><br><span class="line">13:C 03 Feb 2023 11:26:55.851 * AOF rewrite: 6 MB of memory used by copy-on-write</span><br><span class="line">1:S 03 Feb 2023 11:26:55.927 * Background AOF rewrite terminated with success</span><br><span class="line">1:S 03 Feb 2023 11:26:55.927 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)</span><br><span class="line">1:S 03 Feb 2023 11:26:55.927 * Background AOF rewrite finished successfully</span><br></pre></td></tr></table></figure><p>使用连接工具查看，没问题~</p><p><img data-src="https://cdn.jonty.top/img/image-20230203112848725.png" alt="image-20230203112848725"></p><p><img data-src="https://cdn.jonty.top/img/bar2.gif"></p>]]></content>
    
    
    <summary type="html">Docker Swarm部署Redis主从+哨兵Sentinel+HAProxy实现容灾</summary>
    
    
    
    <category term="DevOps" scheme="https://jonty.top/categories/DevOps/"/>
    
    
    <category term="Docker" scheme="https://jonty.top/tags/Docker/"/>
    
    <category term="Docker Swarm" scheme="https://jonty.top/tags/Docker-Swarm/"/>
    
    <category term="Redis" scheme="https://jonty.top/tags/Redis/"/>
    
    <category term="Redis Cluster" scheme="https://jonty.top/tags/Redis-Cluster/"/>
    
  </entry>
  
</feed>
